<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Delete" xml:space="preserve">
    <value>Slet</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nej</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Skrifttype</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Flyt ned</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Flyt op</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Farve</value>
  </data>
  <data name="Convertible" xml:space="preserve">
    <value>Konverterbare</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Kunde</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beskrivelse</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Medarbejder</value>
  </data>
  <data name="GeneralSetup" xml:space="preserve">
    <value>Generelle indstillinger</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Pris</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Mængde</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Størrelse</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Tilføj</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Rediger ...</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Vare</value>
  </data>
  <data name="Pharmacy" xml:space="preserve">
    <value>Apotek</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>Kvittering</value>
  </data>
  <data name="SalesPerson" xml:space="preserve">
    <value>Sælger</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Butik</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Tema</value>
  </data>
  <data name="Terminal" xml:space="preserve">
    <value>Terminal</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="AnyNumber" xml:space="preserve">
    <value>Ethvert tal</value>
  </data>
  <data name="BarCodeExists" xml:space="preserve">
    <value>Denne stregkode findes allerede i databasen</value>
  </data>
  <data name="BarcodeFieldsNotfilledIn" xml:space="preserve">
    <value>Enten skal begge stregkodefelter udfyldes eller ingen af dem.</value>
  </data>
  <data name="BarCodeMaskExists" xml:space="preserve">
    <value>Denne stregkodesmaske findes allerede i databasen</value>
  </data>
  <data name="BarcodeMaskInUse" xml:space="preserve">
    <value>Denne stregkodemaske er i brug og kan ikke slettes</value>
  </data>
  <data name="BarCodeMasks" xml:space="preserve">
    <value>Stregkodesmasker</value>
  </data>
  <data name="BarCodeMaskSegments" xml:space="preserve">
    <value>Stregkodesmaske segmenter</value>
  </data>
  <data name="BarCodeMaskSetup" xml:space="preserve">
    <value>Stregkodesmaskeopsætning</value>
  </data>
  <data name="BarCodeMaskSetupDescription" xml:space="preserve">
    <value>Brug denne indstilling til at definere stregkodesmasker</value>
  </data>
  <data name="BarCodeMaxLengthError" xml:space="preserve">
    <value>En stregkode, der bruger denne stregkodeopsætning, skal højst være # 1 bogstaver i længden</value>
  </data>
  <data name="BarCodeMinLengthError" xml:space="preserve">
    <value>En stregkode, der bruger denne stregkodeopsætning, skal have mindst #1 tegn i længden</value>
  </data>
  <data name="BarcodeNotCorrectlySetup" xml:space="preserve">
    <value>Stregkodeopsætningen eller stregkoden er ikke korrekt indstillet</value>
  </data>
  <data name="BarCodes" xml:space="preserve">
    <value>Stregkoder</value>
  </data>
  <data name="BarCodeSetup" xml:space="preserve">
    <value>Stregkodeopsætning</value>
  </data>
  <data name="BarCodeSetupDescription" xml:space="preserve">
    <value>Brug denne indstilling til at konfigurere regler om stregkoder</value>
  </data>
  <data name="BarCodeSetupID" xml:space="preserve">
    <value>Stregkodeopsætning ID</value>
  </data>
  <data name="BarcodeSetupInUse" xml:space="preserve">
    <value>Denne stregkodeopsætning er i brug og kan ikke slettes</value>
  </data>
  <data name="BarcodesOneWord" xml:space="preserve">
    <value>Stregkoder</value>
  </data>
  <data name="BarcodesTooltip" xml:space="preserve">
    <value>Regler for opsætning af stregkoder</value>
  </data>
  <data name="CheckDigit" xml:space="preserve">
    <value>Kontrolciffer</value>
  </data>
  <data name="ColorDigit" xml:space="preserve">
    <value>Farveciffer</value>
  </data>
  <data name="Coupon" xml:space="preserve">
    <value>Rabatkupon</value>
  </data>
  <data name="DataEntry" xml:space="preserve">
    <value>Dataindtastning</value>
  </data>
  <data name="DeleteBarCode" xml:space="preserve">
    <value>Slet stregkode</value>
  </data>
  <data name="DeleteBarCodeMask" xml:space="preserve">
    <value>Slet stregkodesmaske</value>
  </data>
  <data name="DeleteBarCodeMaskQuestion" xml:space="preserve">
    <value>Er du sikker på, at du vil slette den valgte stregkodemaske?</value>
  </data>
  <data name="DeleteBarCodeQuestion" xml:space="preserve">
    <value>Er du sikker på, at du vil slette den valgte stregkode?</value>
  </data>
  <data name="DeleteBarCodeSetup" xml:space="preserve">
    <value>Slet stregkodeopsætning</value>
  </data>
  <data name="DeleteBarCodeSetupQuestion" xml:space="preserve">
    <value>Er du sikker på, at du vil slette den valgte stregkodeopsætning?</value>
  </data>
  <data name="DeleteSegment" xml:space="preserve">
    <value>Slet segment</value>
  </data>
  <data name="DeleteSegmentQuestion" xml:space="preserve">
    <value>Er du sikker på, at du vil slette det valgte segment?</value>
  </data>
  <data name="EANLicenseCode" xml:space="preserve">
    <value>EAN-licenskode</value>
  </data>
  <data name="ManageBarCodeMasks" xml:space="preserve">
    <value>Administrer stregkodesmasker</value>
  </data>
  <data name="Mask" xml:space="preserve">
    <value>Maske:</value>
  </data>
  <data name="MaskInvalidLetterError" xml:space="preserve">
    <value>Maske indeholder tegn, der ikke er kendte typer</value>
  </data>
  <data name="MaskSetupBarCode" xml:space="preserve">
    <value>Opsætning af stregkodemasker</value>
  </data>
  <data name="MatchBarcodeMask" xml:space="preserve">
    <value>For kreditnotaer skal du konfigurere nummersekvensen, så den matcher præfiksen til stregkodemasken</value>
  </data>
  <data name="NewBarCode" xml:space="preserve">
    <value>Ny stregkode</value>
  </data>
  <data name="NoBarCode" xml:space="preserve">
    <value>Ingen stregkode</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Ingen</value>
  </data>
  <data name="PleaseSelectBarCodeSetup" xml:space="preserve">
    <value>Vælg opsætning af stregkode, før du indtaster stregkode</value>
  </data>
  <data name="PrefixExists" xml:space="preserve">
    <value>Denne stregkodepræfiks findes allerede i databasen</value>
  </data>
  <data name="Ratio" xml:space="preserve">
    <value>Forhold</value>
  </data>
  <data name="ReceiptBarcode" xml:space="preserve">
    <value>Kvitteringsstregkode</value>
  </data>
  <data name="SalesUnitConversionQuestion" xml:space="preserve">
    <value>Der findes ingen enhedskonverteringsregel for at konvertere fra den valgte enhed til salgsenheden for den valgte vare. Vil du oprette reglen?</value>
  </data>
  <data name="SalesUnitConversionRuleMissingAlert" xml:space="preserve">
    <value>Der findes ingen enhedskonverteringsregel for at konvertere fra den valgte enhed til salgsenheden for den valgte vare.</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Indstillinger</value>
  </data>
  <data name="SetupBarCode" xml:space="preserve">
    <value>Indstillinger</value>
  </data>
  <data name="SizeDigit" xml:space="preserve">
    <value>Størrelsesciffer</value>
  </data>
  <data name="StyleDigit" xml:space="preserve">
    <value>Modelciffer</value>
  </data>
  <data name="Symbology" xml:space="preserve">
    <value>Symbology</value>
  </data>
  <data name="UnitConversionQuestion" xml:space="preserve">
    <value>Der findes ingen enhedskonverteringsregel for at konvertere fra den valgte enhed til lagerenheden for den valgte vare. Vil du oprette reglen?</value>
  </data>
  <data name="UnitConversionRuleMissing" xml:space="preserve">
    <value>Enhedskonverteringsregel mangler</value>
  </data>
  <data name="UnitConversionRuleMissingAlert" xml:space="preserve">
    <value>Der findes ingen enhedskonverteringsregel for at konvertere fra den valgte enhed til lagerenheden for den valgte vare.</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Ukendt</value>
  </data>
  <data name="VariantNumber" xml:space="preserve">
    <value>Variantnummer</value>
  </data>
</root>