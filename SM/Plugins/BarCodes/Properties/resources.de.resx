<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Farbe</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Schriftart</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Nach unten</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Nach oben</value>
  </data>
  <data name="BarCodes" xml:space="preserve">
    <value>Strichcodes</value>
  </data>
  <data name="BarCodeSetup" xml:space="preserve">
    <value>Strichcode-Einstellungen</value>
  </data>
  <data name="CheckDigit" xml:space="preserve">
    <value>Prüfziffer</value>
  </data>
  <data name="Coupon" xml:space="preserve">
    <value>Coupon</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Kunde</value>
  </data>
  <data name="Employee" xml:space="preserve">
    <value>Mitarbeiter</value>
  </data>
  <data name="GeneralSetup" xml:space="preserve">
    <value>Allgemeines Setup</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Artikel</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preis</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Anzahl</value>
  </data>
  <data name="SalesPerson" xml:space="preserve">
    <value>Verkäufer</value>
  </data>
  <data name="SetupBarCode" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Größe</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Stil</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unbekannt</value>
  </data>
  <data name="Convertible" xml:space="preserve">
    <value>Umrechenbar</value>
  </data>
  <data name="DataEntry" xml:space="preserve">
    <value>Dateneintrag</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="AnyNumber" xml:space="preserve">
    <value>Jede Nummer</value>
  </data>
  <data name="BarCodeExists" xml:space="preserve">
    <value>Dieser Barcode ist bereits in der Datenbank vorhanden</value>
  </data>
  <data name="BarCodeMaskExists" xml:space="preserve">
    <value>Diese Barcode-Maske ist bereits in der Datenbank vorhanden</value>
  </data>
  <data name="BarCodeMasks" xml:space="preserve">
    <value>Barcode-Masken</value>
  </data>
  <data name="BarCodeMaskSegments" xml:space="preserve">
    <value>Barcode-Maskensegmente</value>
  </data>
  <data name="BarCodeMaskSetup" xml:space="preserve">
    <value>Barcode-Masken-Setup</value>
  </data>
  <data name="BarCodeMaskSetupDescription" xml:space="preserve">
    <value>Verwenden Sie diese Option, um Barcode-Masken zu definieren</value>
  </data>
  <data name="BarCodeMaxLengthError" xml:space="preserve">
    <value>Ein Barcode mit diesem Barcode-Setup darf höchstens #1 Buchstaben lang sein</value>
  </data>
  <data name="BarCodeMinLengthError" xml:space="preserve">
    <value>Ein Barcode mit diesem Barcode-Setup muss mindestens #1 Buchstaben lang sein</value>
  </data>
  <data name="BarCodeSetupDescription" xml:space="preserve">
    <value>Verwenden Sie diese Option, um Barcode-Regeln zu definieren</value>
  </data>
  <data name="BarCodeSetupID" xml:space="preserve">
    <value>Barcode-Setup-ID</value>
  </data>
  <data name="ColorDigit" xml:space="preserve">
    <value>Farbziffer</value>
  </data>
  <data name="DeleteBarCode" xml:space="preserve">
    <value>Barcode löschen</value>
  </data>
  <data name="DeleteBarCodeMask" xml:space="preserve">
    <value>Barcode-Maske löschen</value>
  </data>
  <data name="DeleteBarCodeMaskQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie die ausgewählte Barcode-Maske löschen wollen?</value>
  </data>
  <data name="DeleteBarCodeQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie den ausgewählten Barcode löschen wollen?</value>
  </data>
  <data name="DeleteBarCodeSetup" xml:space="preserve">
    <value>Barcode-Setup löschen</value>
  </data>
  <data name="DeleteBarCodeSetupQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie das ausgewählte Barcode-Setup löschen wollen?</value>
  </data>
  <data name="DeleteSegment" xml:space="preserve">
    <value>Segment löschen</value>
  </data>
  <data name="DeleteSegmentQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie das ausgewählte Segment löschen wolllen?</value>
  </data>
  <data name="EANLicenseCode" xml:space="preserve">
    <value>EAN-Lizenzcode</value>
  </data>
  <data name="ManageBarCodeMasks" xml:space="preserve">
    <value>Barcode-Masken verwalten</value>
  </data>
  <data name="Mask" xml:space="preserve">
    <value>Maske</value>
  </data>
  <data name="MaskInvalidLetterError" xml:space="preserve">
    <value>Maske enthält Buchstaben, die bekannten Typen nicht zugeordnet werden kann</value>
  </data>
  <data name="MaskSetupBarCode" xml:space="preserve">
    <value>Setup-Masken</value>
  </data>
  <data name="NewBarCode" xml:space="preserve">
    <value>Neuer Barcode</value>
  </data>
  <data name="NoBarCode" xml:space="preserve">
    <value>Kein Barcode</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="Pharmacy" xml:space="preserve">
    <value>Apotheke</value>
  </data>
  <data name="PrefixExists" xml:space="preserve">
    <value>Dieser Barcode-Prefix ist bereits in der Datenbank vorhanden</value>
  </data>
  <data name="Ratio" xml:space="preserve">
    <value>Verhältnis</value>
  </data>
  <data name="SizeDigit" xml:space="preserve">
    <value>Größenziffer</value>
  </data>
  <data name="StyleDigit" xml:space="preserve">
    <value>Stilziffer</value>
  </data>
  <data name="Symbology" xml:space="preserve">
    <value>Symbologie</value>
  </data>
  <data name="UnitConversionQuestion" xml:space="preserve">
    <value>Keine Einheitsumwandlungsregel ist vorhanden, um die gewählte Einheit in eine Inventareinheit für den ausgewählten Artikel zu konvertieren. Möchten Sie die Regel erstellen?</value>
  </data>
  <data name="UnitConversionRuleMissing" xml:space="preserve">
    <value>Einheitsumrechnungsregel fehlt</value>
  </data>
  <data name="UnitConversionRuleMissingAlert" xml:space="preserve">
    <value>Keine Einheitsumwandlungsregel ist vorhanden, um die gewählte Einheit in eine Inventareinheit für den ausgewählten Artikel zu konvertieren. Möchten Sie die Regel erstellen?.</value>
  </data>
  <data name="VariantNumber" xml:space="preserve">
    <value>Variationsnummer</value>
  </data>
  <data name="Receipt" xml:space="preserve">
    <value>Kassenbon</value>
  </data>
  <data name="ReceiptBarcode" xml:space="preserve">
    <value>Kassenbon-Barcode</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Geschäft</value>
  </data>
  <data name="Terminal" xml:space="preserve">
    <value>Terminal</value>
  </data>
  <data name="BarcodeFieldsNotfilledIn" xml:space="preserve">
    <value>Entweder müssen beide Barcodefelder ausgefüllt sein oder keins von ihnen.</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="BarcodeNotCorrectlySetup" xml:space="preserve">
    <value>Die Barcode-Einrichtung oder der Barcode ist nicht richtig konfiguriert.</value>
  </data>
  <data name="PleaseSelectBarCodeSetup" xml:space="preserve">
    <value>Bitte wählen Sie die Barcode-Einrichtung, bevor Sie den Barcode eingeben.</value>
  </data>
  <data name="BarcodesOneWord" xml:space="preserve">
    <value>Barcodes</value>
  </data>
  <data name="BarcodesTooltip" xml:space="preserve">
    <value>Barcoderegeln festlegen</value>
  </data>
  <data name="MatchBarcodeMask" xml:space="preserve">
    <value>Für Gutschriften müssen Sie die Nummernsequenz so konfigurieren, dass sie dem Präfix der Barcodemaske entspricht.</value>
  </data>
  <data name="SalesUnitConversionQuestion" xml:space="preserve">
    <value>Es ist keine Konversionsregel vorhanden, mit der sich die ausgewählte Einheit zur Umsatzeinheit für den ausgewählten Artikel konvertieren lässt. Möchten Sie solch eine Regel erstellen?</value>
  </data>
  <data name="SalesUnitConversionRuleMissingAlert" xml:space="preserve">
    <value>Es ist keine Konversionsregel vorhanden, mit der sich die ausgewählte Einheit zur Umsatzeinheit für den ausgewählten Artikel konvertieren lässt.</value>
  </data>
  <data name="BarcodeMaskInUse" xml:space="preserve">
    <value>Diese Barcodemaske wird verwendet und kann nicht gelöscht werden.</value>
  </data>
  <data name="BarcodeSetupInUse" xml:space="preserve">
    <value>Dieses Barcode-Setup wird verwendet und kann nicht gelöscht werden.</value>
  </data>
</root>