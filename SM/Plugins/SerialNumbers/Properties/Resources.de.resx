<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="CouldNotConnectToStoreServer" xml:space="preserve">
    <value>Konnte keine Verbindung zum Site Service herstellen</value>
  </data>
  <data name="CSV" xml:space="preserve">
    <value>CSV-Datei</value>
  </data>
  <data name="CSVFile" xml:space="preserve">
    <value>CSV-Datei</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="DeleteFileImport" xml:space="preserve">
    <value>Importdateien löschen</value>
  </data>
  <data name="DeleteFileImportQuestion" xml:space="preserve">
    <value>Möchten Sie die ausgewählten Importdateien wirklich löschen?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Excel" xml:space="preserve">
    <value>Excel-Dokument</value>
  </data>
  <data name="ExcelFile" xml:space="preserve">
    <value>Excel-Datei</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Artikel</value>
  </data>
  <data name="ItemID" xml:space="preserve">
    <value>Artikel-ID</value>
  </data>
  <data name="RetailDepartment" xml:space="preserve">
    <value>Einzelhandelsbranche</value>
  </data>
  <data name="RetailGroup" xml:space="preserve">
    <value>Einzelhandelsgruppe</value>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Seriennummer</value>
  </data>
  <data name="SpecialGroup" xml:space="preserve">
    <value>Sondergruppe</value>
  </data>
  <data name="Variant" xml:space="preserve">
    <value>Variante</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Artikel</value>
  </data>
  <data name="AddMappingToProfile" xml:space="preserve">
    <value>Bitte fügen Sie dem Profil eine Zuordnung hinzu.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="CSVHasNoMapping" xml:space="preserve">
    <value>Das CSV-Profil, das als Standardprofil festgelegt ist, verfügt über keine Zuordnungszeilen.</value>
  </data>
  <data name="DeleteSerialNumber" xml:space="preserve">
    <value>Seriennummer löschen</value>
  </data>
  <data name="DeleteSerialNumberQuestion" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie die ausgewählte Seriennummer löschen möchten?</value>
  </data>
  <data name="ExportSerialNumbers" xml:space="preserve">
    <value>Seriennummern exportieren</value>
  </data>
  <data name="FileAlreadyAddedToImport" xml:space="preserve">
    <value>Diese Datei wurde bereits für den Import hinzugefügt. Möchten Sie die vorher hinzugefügte Datei überschreiben?</value>
  </data>
  <data name="ImportDuplicateFileHeader" xml:space="preserve">
    <value>Doppelte Datei</value>
  </data>
  <data name="ImportSerialNumbers" xml:space="preserve">
    <value>Seriennummern importieren</value>
  </data>
  <data name="InformationAboutItemCannotBeFound" xml:space="preserve">
    <value>Es konnten keine Informationen zu dem Artikel gefunden werden</value>
  </data>
  <data name="LoadItemsError" xml:space="preserve">
    <value>Artikel konnten nicht geladen werden.</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manuell</value>
  </data>
  <data name="ManualEntry" xml:space="preserve">
    <value>Manueller Eintrag</value>
  </data>
  <data name="MissingCSVImportProfile" xml:space="preserve">
    <value>Bitte erstellen Sie ein CSV-Importprofil des Seriennummerntyps und legen Sie es als Standard fest, bevor Sie eine CSV-Seriennummerndatei importieren.</value>
  </data>
  <data name="OverwritePreviouslyAddedFile" xml:space="preserve">
    <value>Möchten Sie die vorher hinzugefügte Datei überschreiben?</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Referenz</value>
  </data>
  <data name="Related_CSVProfiles" xml:space="preserve">
    <value>CSV-Profile</value>
  </data>
  <data name="SerialNumberAlreadyExists" xml:space="preserve">
    <value>Diese Seriennummer ist bereits für den Artikel vorhanden.</value>
  </data>
  <data name="SerialNumberReserved" xml:space="preserve">
    <value>Die Seriennummer ist reserviert oder verkauft. Reservierte oder verkaufte Seriennummern können nicht geändert werden.</value>
  </data>
  <data name="SerialNumbers" xml:space="preserve">
    <value>Seriennummern</value>
  </data>
  <data name="SerialNumbersMenuItem" xml:space="preserve">
    <value>Seriennummern</value>
  </data>
  <data name="SerialNumbersMenuItemDescription" xml:space="preserve">
    <value>Verwenden Sie diese Option, um Seriennummern anzuzeigen und zu bearbeiten</value>
  </data>
  <data name="SerialNumbersTabName" xml:space="preserve">
    <value>Seriennummern</value>
  </data>
  <data name="SerialNumbersTooltipDescription" xml:space="preserve">
    <value>Seriennummern verwalten und zu Artikeln hinzufügen</value>
  </data>
  <data name="SerialNumbersViewHeader" xml:space="preserve">
    <value>Seriennummern</value>
  </data>
  <data name="SerialNumberTemplate" xml:space="preserve">
    <value>Seriennummernvorlage</value>
  </data>
  <data name="Sold" xml:space="preserve">
    <value>Verkauft</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Typ</value>
  </data>
  <data name="UseSerialNumbers" xml:space="preserve">
    <value>Seriennummern verwenden</value>
  </data>
</root>