<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Code barre</value>
  </data>
  <data name="CouldNotConnectToStoreServer" xml:space="preserve">
    <value>Impossible de se connecter au service de site</value>
  </data>
  <data name="CSV" xml:space="preserve">
    <value>Fichier CSV</value>
  </data>
  <data name="CSVFile" xml:space="preserve">
    <value>Fichier CSV</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DeleteFileImport" xml:space="preserve">
    <value>Supprimer les fichiers d'importation</value>
  </data>
  <data name="DeleteFileImportQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les fichiers d'importation choisis ?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="Excel" xml:space="preserve">
    <value>Document Excel</value>
  </data>
  <data name="ExcelFile" xml:space="preserve">
    <value>Fichier Excel</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ItemID" xml:space="preserve">
    <value>ID de l'article</value>
  </data>
  <data name="RetailDepartment" xml:space="preserve">
    <value>Département de vente au détail</value>
  </data>
  <data name="RetailGroup" xml:space="preserve">
    <value>Groupe de vente au détail</value>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Numéro de série</value>
  </data>
  <data name="SpecialGroup" xml:space="preserve">
    <value>Groupe spécial</value>
  </data>
  <data name="Variant" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Articles</value>
  </data>
  <data name="AddMappingToProfile" xml:space="preserve">
    <value>Ajoutez un mappage au profil.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="CSVHasNoMapping" xml:space="preserve">
    <value>Le profil CSV qui est réglé en tant que profil par défaut ne comporte aucune ligne de mappage.</value>
  </data>
  <data name="DeleteSerialNumber" xml:space="preserve">
    <value>Supprimer le numéro de série</value>
  </data>
  <data name="DeleteSerialNumberQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer le numéro de série choisi ?</value>
  </data>
  <data name="ExportSerialNumbers" xml:space="preserve">
    <value>Exporter des numéros de série</value>
  </data>
  <data name="FileAlreadyAddedToImport" xml:space="preserve">
    <value>Ce fichier a déjà été ajouté à l'importation ; souhaitez-vous remplacer le fichier précédemment ajouté ?.</value>
  </data>
  <data name="ImportDuplicateFileHeader" xml:space="preserve">
    <value>Fichier double</value>
  </data>
  <data name="ImportSerialNumbers" xml:space="preserve">
    <value>Importer des numéros de série</value>
  </data>
  <data name="InformationAboutItemCannotBeFound" xml:space="preserve">
    <value>Impossible de trouver des informations sur cet article</value>
  </data>
  <data name="LoadItemsError" xml:space="preserve">
    <value>Échec du chargement d'articles.</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manuel</value>
  </data>
  <data name="ManualEntry" xml:space="preserve">
    <value>Entrée manuelle</value>
  </data>
  <data name="MissingCSVImportProfile" xml:space="preserve">
    <value>Veuillez créer un profil d'importation CSV du type de numéro de série et le définir par défaut avant d'importer un fichier de numéro de série CSV.</value>
  </data>
  <data name="OverwritePreviouslyAddedFile" xml:space="preserve">
    <value>Souhaitez-vous remplacer le fichier ajouté précédemment ?</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>Référence</value>
  </data>
  <data name="Related_CSVProfiles" xml:space="preserve">
    <value>Profils CSV</value>
  </data>
  <data name="SerialNumberAlreadyExists" xml:space="preserve">
    <value>Ce numéro de série existe déjà pour l'article.</value>
  </data>
  <data name="SerialNumberReserved" xml:space="preserve">
    <value>Ce numéro de série est réservé ou vendu. Les numéros de série réservés et vendus ne peuvent pas être modifiés.</value>
  </data>
  <data name="SerialNumbers" xml:space="preserve">
    <value>Numéros de série</value>
  </data>
  <data name="SerialNumbersMenuItem" xml:space="preserve">
    <value>Numéros de série</value>
  </data>
  <data name="SerialNumbersMenuItemDescription" xml:space="preserve">
    <value>Utilisez cette option pour afficher et modifier les numéros de série</value>
  </data>
  <data name="SerialNumbersTabName" xml:space="preserve">
    <value>Numéros de série</value>
  </data>
  <data name="SerialNumbersTooltipDescription" xml:space="preserve">
    <value>Gérer les numéros de série et les ajouter aux articles</value>
  </data>
  <data name="SerialNumbersViewHeader" xml:space="preserve">
    <value>Numéros de série</value>
  </data>
  <data name="SerialNumberTemplate" xml:space="preserve">
    <value>Modèle de numéro de série</value>
  </data>
  <data name="Sold" xml:space="preserve">
    <value>Vendu</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UseSerialNumbers" xml:space="preserve">
    <value>Utiliser les numéros de série</value>
  </data>
</root>