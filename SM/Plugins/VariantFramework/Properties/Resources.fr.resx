<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Dimensions" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Tout sélectionner</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Descendre</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Monter</value>
  </data>
  <data name="DeleteRetailItem" xml:space="preserve">
    <value>Supprimer l'article de vente au détail</value>
  </data>
  <data name="DeleteRetailItemQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer l'article de vente au détail choisi ?</value>
  </data>
  <data name="DeleteRetailItems" xml:space="preserve">
    <value>Supprimer les articles de vente au détail</value>
  </data>
  <data name="DeleteRetailItemsQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les articles de vente au détail choisis ?</value>
  </data>
  <data name="Deselect" xml:space="preserve">
    <value>Décocher</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtre :</value>
  </data>
  <data name="ItemID" xml:space="preserve">
    <value>ID de l'article</value>
  </data>
  <data name="Retail" xml:space="preserve">
    <value>Vente au détail</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>Choisi</value>
  </data>
  <data name="SelectNone" xml:space="preserve">
    <value>Ne rien sélectionner</value>
  </data>
  <data name="AddAttribute" xml:space="preserve">
    <value>Ajouter un attribut</value>
  </data>
  <data name="AddDimension" xml:space="preserve">
    <value>Ajouter une dimension</value>
  </data>
  <data name="AddVariantItem" xml:space="preserve">
    <value>Ajouter un article de variante</value>
  </data>
  <data name="AttributeCodeInvalid" xml:space="preserve">
    <value>Vous avez déjà créé un attribut ayant ce code pour cette dimension</value>
  </data>
  <data name="AttributeDescriptionInvalid" xml:space="preserve">
    <value>Vous avez déjà créé un attribut ayant cette description pour cette dimension</value>
  </data>
  <data name="CreatingVariantItems" xml:space="preserve">
    <value>Création d'articles de variante en cours</value>
  </data>
  <data name="CreatingVariantItemsCount" xml:space="preserve">
    <value>Création de {0} sur {1} articles de variante</value>
  </data>
  <data name="DeleteAttribute" xml:space="preserve">
    <value>Supprimer l'attribut</value>
  </data>
  <data name="DeleteAttributeQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer l'attribut choisi ?</value>
  </data>
  <data name="DeleteAttributeWarning" xml:space="preserve">
    <value>La suppression de cet attribut supprimera tous les articles de variante utilisant cet attribut. Êtes-vous sûr(e) de vouloir le supprimer ?</value>
  </data>
  <data name="DeleteDimension" xml:space="preserve">
    <value>Supprimer la dimension</value>
  </data>
  <data name="DeleteDimensionQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer la dimension choisie ?</value>
  </data>
  <data name="DeleteVariantItem" xml:space="preserve">
    <value>Supprimer l'article de variante</value>
  </data>
  <data name="DeleteVariantItemQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer l'article de variante choisi ?</value>
  </data>
  <data name="DeleteVariantItems" xml:space="preserve">
    <value>Supprimer des articles de variantes</value>
  </data>
  <data name="DeleteVariantItemsQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les articles de variantes choisis ?</value>
  </data>
  <data name="DimensionAttributeMissing" xml:space="preserve">
    <value>À l'onglet '{0}' un attribut de dimension est manquant pour la dimension '{1}'</value>
  </data>
  <data name="DimensionDescriptionNotValid" xml:space="preserve">
    <value>Une dimension correspondant à cette description a déjà été créée</value>
  </data>
  <data name="EditDescriptionAndCode" xml:space="preserve">
    <value>Modifier la description et le code</value>
  </data>
  <data name="NoVariantItemsSelected" xml:space="preserve">
    <value>L'article que vous êtes en train de créer a des dimensions, mais aucun article de variante n'a été sélectionné. Veuillez choisir les articles de variantes devant être créés ou supprimer les dimensions</value>
  </data>
  <data name="RemoveAttribute" xml:space="preserve">
    <value>Retirer l'attribut</value>
  </data>
  <data name="RemoveDimension" xml:space="preserve">
    <value>Retirer la dimension</value>
  </data>
  <data name="RemoveVariantItem" xml:space="preserve">
    <value>Retirer l'article de variante</value>
  </data>
  <data name="SaveAsTemplate" xml:space="preserve">
    <value>Enregistrer en tant que modèle</value>
  </data>
  <data name="SaveDimensionAsTemplate" xml:space="preserve">
    <value>Enregistrer la dimension en tant que modèle</value>
  </data>
  <data name="SaveDimensionTemplate" xml:space="preserve">
    <value>Enregistrer le modèle de dimension</value>
  </data>
  <data name="VariantFrameworkPluginName" xml:space="preserve">
    <value>Infrastructure de la variante</value>
  </data>
  <data name="VariantItems" xml:space="preserve">
    <value>Articles de variantes</value>
  </data>
  <data name="NoDimensionsForVariantItem" xml:space="preserve">
    <value>L'article que vous êtes en train de créer appartient au type d'en-tête de variante, mais aucune dimension n'a été choisie. Veuillez créer des dimensions et des articles de variante ou passer le type d'article à Article de vente au détail</value>
  </data>
  <data name="NoProperItemType" xml:space="preserve">
    <value>L'article que vous êtes en train de créer ne prend pas en charge les dimensions ou articles de variante. Veuillez changer le type d'article ou supprimer les articles de variantes ou dimensions choisis.</value>
  </data>
  <data name="ItemDescription" xml:space="preserve">
    <value>Description</value>
  </data>
</root>