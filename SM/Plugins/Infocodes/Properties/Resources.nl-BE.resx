<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Kleur</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuratie</value>
  </data>
  <data name="Convertible" xml:space="preserve">
    <value>Omzetbaar</value>
  </data>
  <data name="CrossSellGroups" xml:space="preserve">
    <value>Koppelverkoopgroepen</value>
  </data>
  <data name="CrossSellInfocodeGroups" xml:space="preserve">
    <value>Koppelverkoop infocodegroepen</value>
  </data>
  <data name="CrossSellInfocodeGroupsDescription" xml:space="preserve">
    <value>Een lijst met koppelverkoop infocodegroepen</value>
  </data>
  <data name="CrossSelling" xml:space="preserve">
    <value>Koppelverkoop</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="DeleteInfocodeCaption" xml:space="preserve">
    <value>Infocode verwijderen</value>
  </data>
  <data name="DeleteInfocodeGroupQuestion" xml:space="preserve">
    <value>Weet u zeker dat u deze infocodegroep wilt verwijderen?</value>
  </data>
  <data name="DeleteInfocodeQuestion" xml:space="preserve">
    <value>Weet u zeker dat u deze infocode wilt verwijderen?</value>
  </data>
  <data name="DeleteInfocodeSpecific" xml:space="preserve">
    <value>Link naar infocode ongedaan maken</value>
  </data>
  <data name="DeleteInfocodeSubcodeCaption" xml:space="preserve">
    <value>Subcode verwijderen</value>
  </data>
  <data name="DeleteInfocodeSubcodeQuestion" xml:space="preserve">
    <value>Weet u zeker dat u deze subcode wilt verwijderen?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bewerken</value>
  </data>
  <data name="EditGroups" xml:space="preserve">
    <value>Groepen bewerken</value>
  </data>
  <data name="EditInfocodes" xml:space="preserve">
    <value>Infocodes bewerken</value>
  </data>
  <data name="FromRetailGroupGroups" xml:space="preserve">
    <value>Groepen - Van retailgroep</value>
  </data>
  <data name="FromRetailGroupInfocodes" xml:space="preserve">
    <value>Infocodes - Van retailgroep </value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Algemeen</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groepen</value>
  </data>
  <data name="Infocode" xml:space="preserve">
    <value>Infocode</value>
  </data>
  <data name="InfocodeGroupSetup" xml:space="preserve">
    <value>Infocodegroepen</value>
  </data>
  <data name="Infocodes" xml:space="preserve">
    <value>Infocodes</value>
  </data>
  <data name="InfocodesDescription" xml:space="preserve">
    <value>Een lijst met alle beschikbare infocodes</value>
  </data>
  <data name="ItemModifierGroups" xml:space="preserve">
    <value>Artikelwijziger infocodegroepen</value>
  </data>
  <data name="ItemModifierGroupsDescription" xml:space="preserve">
    <value>Een lijst met artikelwijziger infocodegroepen</value>
  </data>
  <data name="ItemModifierGroupsShort" xml:space="preserve">
    <value>Artikelwijzigergroepen</value>
  </data>
  <data name="ItemModifiers" xml:space="preserve">
    <value>Artikelwijzigers</value>
  </data>
  <data name="MaximumLength" xml:space="preserve">
    <value>Maximumlengte:</value>
  </data>
  <data name="MaximumSelection" xml:space="preserve">
    <value>Maximale selectie:</value>
  </data>
  <data name="MaximumValue" xml:space="preserve">
    <value>Maximumwaarde:</value>
  </data>
  <data name="MinimumLength" xml:space="preserve">
    <value>Minimumlengte:</value>
  </data>
  <data name="MinimumSelection" xml:space="preserve">
    <value>Minimale selectie:</value>
  </data>
  <data name="MinimumValue" xml:space="preserve">
    <value>Minimumwaarde:</value>
  </data>
  <data name="Printing" xml:space="preserve">
    <value>Afdrukken</value>
  </data>
  <data name="Retail" xml:space="preserve">
    <value>Retail</value>
  </data>
  <data name="SelectionButtonCanOnlyHave12SubCodes" xml:space="preserve">
    <value>Een infocode keuzeknop kan slechts 12 subcodes hebben. Deze infocode heeft meer dan 12 subcodes.</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Grootte </value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Stijl</value>
  </data>
  <data name="SubCode" xml:space="preserve">
    <value>Subcode</value>
  </data>
  <data name="SubCodes" xml:space="preserve">
    <value>Subcodes</value>
  </data>
  <data name="VariantNumber" xml:space="preserve">
    <value>Variantnummer</value>
  </data>
  <data name="ViewTargetInfocode" xml:space="preserve">
    <value>Doel infocode bekijken</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>&amp;Bekijken</value>
  </data>
  <data name="DeleteInfocodeSpecificQuestion" xml:space="preserve">
    <value>Weet u zeker dat u #1 van #2 wilt loskoppelen?</value>
  </data>
  <data name="AgeLimit" xml:space="preserve">
    <value>Leeftijdslimiet</value>
  </data>
  <data name="AllTypes" xml:space="preserve">
    <value>Alle types</value>
  </data>
  <data name="CustomerSelec" xml:space="preserve">
    <value>Klantenselectie</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Datum</value>
  </data>
  <data name="InfocodeName" xml:space="preserve">
    <value>Naam infocode</value>
  </data>
  <data name="ItemSelect" xml:space="preserve">
    <value>Artikel geselecteerd</value>
  </data>
  <data name="Numeric" xml:space="preserve">
    <value>Numerieke input</value>
  </data>
  <data name="SelectionButtons" xml:space="preserve">
    <value>Selectieknoppen</value>
  </data>
  <data name="SelectionList" xml:space="preserve">
    <value>Selectielijst</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Tekst</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Artikel</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Geen</value>
  </data>
  <data name="TaxGroup" xml:space="preserve">
    <value>Belastingsgroep</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatisch</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Handmatig</value>
  </data>
  <data name="CustomerSelection" xml:space="preserve">
    <value>Klantenselectie</value>
  </data>
  <data name="DateInput" xml:space="preserve">
    <value>Datuminput</value>
  </data>
  <data name="ItemSelection" xml:space="preserve">
    <value>Artikelselectie</value>
  </data>
  <data name="NumericInput" xml:space="preserve">
    <value>Numerieke input</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Instellingen</value>
  </data>
  <data name="TextInput" xml:space="preserve">
    <value>Tekstinput</value>
  </data>
  <data name="InfocodeType" xml:space="preserve">
    <value>Type infocode</value>
  </data>
  <data name="PriceTypeHasToBeSelected" xml:space="preserve">
    <value>Prijstype moet geselecteerd zijn</value>
  </data>
  <data name="VariantHasToBeSelected" xml:space="preserve">
    <value>Variant moet geselecteerd zijn</value>
  </data>
  <data name="InfocodesTooltipDescription" xml:space="preserve">
    <value>Beheer de infocodes, kruisverkoop en artikelwijzigers</value>
  </data>
</root>