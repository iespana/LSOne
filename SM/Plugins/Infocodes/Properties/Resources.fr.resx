<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Couleur</value>
  </data>
  <data name="Convertible" xml:space="preserve">
    <value>Convertible</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="EditGroups" xml:space="preserve">
    <value>Éditer les groupes</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Général</value>
  </data>
  <data name="Printing" xml:space="preserve">
    <value>Impression</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="CrossSellGroups" xml:space="preserve">
    <value>Groupes de ventes croisées</value>
  </data>
  <data name="CrossSellInfocodeGroups" xml:space="preserve">
    <value>Groupes de code info de ventes croisées</value>
  </data>
  <data name="CrossSellInfocodeGroupsDescription" xml:space="preserve">
    <value>Une liste de groupes de code info de ventes croisées</value>
  </data>
  <data name="CrossSelling" xml:space="preserve">
    <value>Ventes croisées</value>
  </data>
  <data name="DeleteInfocodeCaption" xml:space="preserve">
    <value>Supprimer le code info</value>
  </data>
  <data name="DeleteInfocodeGroupQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer ce groupe de codes info ?</value>
  </data>
  <data name="DeleteInfocodeQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer ce code info ?</value>
  </data>
  <data name="DeleteInfocodeSpecific" xml:space="preserve">
    <value>Déconnecter le lien au code info</value>
  </data>
  <data name="DeleteInfocodeSpecificQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir déconnecter #1 de #2 ?</value>
  </data>
  <data name="DeleteInfocodeSubcodeCaption" xml:space="preserve">
    <value>Supprimer le sous-code</value>
  </data>
  <data name="DeleteInfocodeSubcodeQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer ce sous-code ?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="EditInfocodes" xml:space="preserve">
    <value>Modifier les codes info</value>
  </data>
  <data name="FromRetailGroupGroups" xml:space="preserve">
    <value>Groupes - du groupe de vente au détail</value>
  </data>
  <data name="FromRetailGroupInfocodes" xml:space="preserve">
    <value>Infocodes - du groupe de vente au détail </value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groupes :</value>
  </data>
  <data name="Infocode" xml:space="preserve">
    <value>Code info</value>
  </data>
  <data name="InfocodeGroupSetup" xml:space="preserve">
    <value>Groupes de codes info</value>
  </data>
  <data name="Infocodes" xml:space="preserve">
    <value>Codes info</value>
  </data>
  <data name="InfocodesDescription" xml:space="preserve">
    <value>Une liste de tous les codes info disponibles</value>
  </data>
  <data name="ItemModifierGroups" xml:space="preserve">
    <value>Groupes de codes info du modificateur d'article</value>
  </data>
  <data name="ItemModifierGroupsDescription" xml:space="preserve">
    <value>Une liste des groupes de codes info du modificateur d'article</value>
  </data>
  <data name="ItemModifierGroupsShort" xml:space="preserve">
    <value>Groupes de modificateurs d'articles</value>
  </data>
  <data name="ItemModifiers" xml:space="preserve">
    <value>Modificateurs d'articles</value>
  </data>
  <data name="MaximumLength" xml:space="preserve">
    <value>Longueur maximum :</value>
  </data>
  <data name="MaximumSelection" xml:space="preserve">
    <value>Sélection maximum :</value>
  </data>
  <data name="MaximumValue" xml:space="preserve">
    <value>Valeur maximum :</value>
  </data>
  <data name="MinimumLength" xml:space="preserve">
    <value>Longueur minimum :</value>
  </data>
  <data name="MinimumSelection" xml:space="preserve">
    <value>Sélection maximum :</value>
  </data>
  <data name="MinimumValue" xml:space="preserve">
    <value>Valeur minimum :</value>
  </data>
  <data name="Retail" xml:space="preserve">
    <value>Vente au détail</value>
  </data>
  <data name="SelectionButtonCanOnlyHave12SubCodes" xml:space="preserve">
    <value>Un code info de bouton de sélection ne peut comporter que 12 sous-codes. Ce code info comporte plus de 12 sous-codes.</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Style :</value>
  </data>
  <data name="SubCode" xml:space="preserve">
    <value>Sous-code</value>
  </data>
  <data name="SubCodes" xml:space="preserve">
    <value>Sous-codes</value>
  </data>
  <data name="VariantNumber" xml:space="preserve">
    <value>Numéro de variante :</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Afficher</value>
  </data>
  <data name="ViewTargetInfocode" xml:space="preserve">
    <value>Afficher l'info code de la cible</value>
  </data>
  <data name="AgeLimit" xml:space="preserve">
    <value>Limite d'âge</value>
  </data>
  <data name="AllTypes" xml:space="preserve">
    <value>Tous types</value>
  </data>
  <data name="CustomerSelec" xml:space="preserve">
    <value>Choix du client</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="InfocodeName" xml:space="preserve">
    <value>Nom de code info</value>
  </data>
  <data name="ItemSelect" xml:space="preserve">
    <value>Article choisi</value>
  </data>
  <data name="Numeric" xml:space="preserve">
    <value>Entrée numérique</value>
  </data>
  <data name="SelectionButtons" xml:space="preserve">
    <value>Boutons de sélection</value>
  </data>
  <data name="SelectionList" xml:space="preserve">
    <value>Liste de sélection</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Texte</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="TaxGroup" xml:space="preserve">
    <value>Groupe de taxe</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatique</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manuel</value>
  </data>
  <data name="CustomerSelection" xml:space="preserve">
    <value>Choix du client</value>
  </data>
  <data name="DateInput" xml:space="preserve">
    <value>Entrée de la date</value>
  </data>
  <data name="ItemSelection" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="NumericInput" xml:space="preserve">
    <value>Entrée numérique</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="TextInput" xml:space="preserve">
    <value>Entrée du texte</value>
  </data>
  <data name="InfocodeType" xml:space="preserve">
    <value>Type de code info</value>
  </data>
  <data name="PriceTypeHasToBeSelected" xml:space="preserve">
    <value>Un type de prix doit être choisi</value>
  </data>
  <data name="VariantHasToBeSelected" xml:space="preserve">
    <value>Une variante doit être choisie</value>
  </data>
  <data name="InfocodesTooltipDescription" xml:space="preserve">
    <value>Gérer les codes infos, la vente croisée et les modificateurs d'articles</value>
  </data>
</root>