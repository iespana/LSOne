<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="GeneralSetup" xml:space="preserve">
    <value>Paramètres généraux</value>
  </data>
  <data name="AllSelectFormsOfUserDefinedType" xml:space="preserve">
    <value>Une ou plusieurs dispositions de formulaire choisies pour l'exportation sont un type défini par l'utilisateur. Les dispositions de formulaire de types définis par l'utilisateur ne peuvent pas être exportées.</value>
  </data>
  <data name="AlwaysPrint" xml:space="preserve">
    <value>Toujours imprimer</value>
  </data>
  <data name="DeleteForm" xml:space="preserve">
    <value>Supprimer le formulaire</value>
  </data>
  <data name="DeleteFormQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer la disposition de formulaire choisie ?</value>
  </data>
  <data name="DeleteForms" xml:space="preserve">
    <value>Supprimer les formulaires</value>
  </data>
  <data name="DeleteFormsQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les dispositions de formulaire choisies ?</value>
  </data>
  <data name="DeleteFormType" xml:space="preserve">
    <value>Supprimer le type de formulaire</value>
  </data>
  <data name="DeleteFormTypeQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer le type de formulaire choisi ?</value>
  </data>
  <data name="DeleteFormTypes" xml:space="preserve">
    <value>Supprimer les types de formulaires</value>
  </data>
  <data name="DeleteFormTypesQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les types de formulaire choisis ?</value>
  </data>
  <data name="EditCmd" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="EditForms" xml:space="preserve">
    <value>Modifier les formulaires</value>
  </data>
  <data name="EditFormsDescription" xml:space="preserve">
    <value>Utilisez cette option pour afficher ou modifier des dispositions de formulaires</value>
  </data>
  <data name="EmptyDescription" xml:space="preserve">
    <value>La description du formulaire ne peut pas être vide</value>
  </data>
  <data name="FieldsIntersect" xml:space="preserve">
    <value>Intersection de champs sur le formulaire</value>
  </data>
  <data name="Form" xml:space="preserve">
    <value>Formulaire</value>
  </data>
  <data name="FormDesigner" xml:space="preserve">
    <value>Concepteur de formulaire</value>
  </data>
  <data name="FormExists" xml:space="preserve">
    <value>Un formulaire comportant cet ID existe déjà.</value>
  </data>
  <data name="FormLayouts" xml:space="preserve">
    <value>Dispositions de formulaires</value>
  </data>
  <data name="FormLayoutsDescription" xml:space="preserve">
    <value>Utilisez cette option pour afficher ou modifier des dispositions de formulaires</value>
  </data>
  <data name="Forms" xml:space="preserve">
    <value>Formulaires</value>
  </data>
  <data name="FormsAndLabels" xml:space="preserve">
    <value>Formulaires et étiquettes</value>
  </data>
  <data name="FormsNotExported" xml:space="preserve">
    <value>Un ou plusieurs formulaires choisis pour l'exportation est (sont) un type défini par l'utilisateur. Les formulaires de types définis par l'utilisateur ne peuvent pas être exportés.</value>
  </data>
  <data name="FormTypeExists" xml:space="preserve">
    <value>Un type de formulaire correspondant à cette description existe déjà</value>
  </data>
  <data name="FormTypeInUseOn" xml:space="preserve">
    <value>Le type de formulaire #1 a été utilisé sur la disposition de formulaire #2. Le type de formulaire ne peut pas être supprimé.</value>
  </data>
  <data name="FormTypes" xml:space="preserve">
    <value>Types de formulaires</value>
  </data>
  <data name="FormTypesDescription" xml:space="preserve">
    <value>Utilisez cette option pour afficher ou modifier les types de formulaires</value>
  </data>
  <data name="FormUsedInProfile" xml:space="preserve">
    <value>La disposition de formulaire #1 a été utilisée dans le profil de formulaire #2. Les dispositions de formulaire en cours d'utilisation ne peuvent pas être supprimées.</value>
  </data>
  <data name="NeverPrint" xml:space="preserve">
    <value>Ne jamais imprimer</value>
  </data>
  <data name="PromptUser" xml:space="preserve">
    <value>Demander à l'utilisateur</value>
  </data>
  <data name="ShowPreview" xml:space="preserve">
    <value>Afficher l'aperçu</value>
  </data>
  <data name="SystemTypesCannotBeDeleted" xml:space="preserve">
    <value>Les types de systèmes ne peuvent pas être supprimés</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Exporter</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importer</value>
  </data>
  <data name="FormLayoutsTooltipDescription" xml:space="preserve">
    <value>Modifier les dispositions de formulaires imprimables comme le reçu client dans un éditeur de présentation graphique</value>
  </data>
  <data name="FormTypesTooltipDescription" xml:space="preserve">
    <value>Gérer les types de formulaires</value>
  </data>
  <data name="Sites" xml:space="preserve">
    <value>Sites</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="SystemLayout" xml:space="preserve">
    <value>Mise en page du système</value>
  </data>
  <data name="SystemLayoutCannotBeDeleted" xml:space="preserve">
    <value>Les mises en page de système ne peuvent pas être supprimées.</value>
  </data>
</root>