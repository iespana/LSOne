<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Cộng thêm</value>
  </data>
  <data name="AllSelectFormsOfUserDefinedType" xml:space="preserve">
    <value>Một hoặc nhiều bố cục biểu mẫu được chọn để xuất là loại do người dùng xác định. Bố cục mẫu của các loại do người dùng xác định không thể được xuất.</value>
  </data>
  <data name="AlwaysPrint" xml:space="preserve">
    <value>Luôn in</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="DeleteForm" xml:space="preserve">
    <value>Xóa Mẫu</value>
  </data>
  <data name="DeleteFormQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa bố cục biểu mẫu đã chọn?</value>
  </data>
  <data name="DeleteForms" xml:space="preserve">
    <value>Xóa Mẫu</value>
  </data>
  <data name="DeleteFormsQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa bố cục biểu mẫu đã chọn?</value>
  </data>
  <data name="DeleteFormType" xml:space="preserve">
    <value>Xóa loại mẫu</value>
  </data>
  <data name="DeleteFormTypeQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa loại biểu mẫu đã chọn?</value>
  </data>
  <data name="DeleteFormTypes" xml:space="preserve">
    <value>Xóa các loại biểu mẫu</value>
  </data>
  <data name="DeleteFormTypesQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa các loại biểu mẫu đã chọn?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Mô tả:</value>
  </data>
  <data name="EditCmd" xml:space="preserve">
    <value>Chỉnh sửa</value>
  </data>
  <data name="EditForms" xml:space="preserve">
    <value>Chỉnh sửa biểu mẫu</value>
  </data>
  <data name="EditFormsDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để xem hoặc chỉnh sửa bố cục biểu mẫu</value>
  </data>
  <data name="EmptyDescription" xml:space="preserve">
    <value>Mô tả mẫu không thể để trống</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Xuất ra</value>
  </data>
  <data name="FieldsIntersect" xml:space="preserve">
    <value>Các trường giao nhau trên mẫu</value>
  </data>
  <data name="Form" xml:space="preserve">
    <value>Biểu mẫu</value>
  </data>
  <data name="FormDesigner" xml:space="preserve">
    <value>Thiết kế mẫu</value>
  </data>
  <data name="FormExists" xml:space="preserve">
    <value>Một biểu mẫu với ID đó đã tồn tại.</value>
  </data>
  <data name="FormLayouts" xml:space="preserve">
    <value>Bố cục</value>
  </data>
  <data name="FormLayoutsDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để xem hoặc chỉnh sửa bố cục biểu mẫu</value>
  </data>
  <data name="FormLayoutsTooltipDescription" xml:space="preserve">
    <value>Chỉnh sửa các bố cục biểu mẫu có thể in khác nhau, chẳng hạn như biên nhận của khách hàng trong trình chỉnh sửa bố cục đồ họa</value>
  </data>
  <data name="Forms" xml:space="preserve">
    <value>Biểu mẫu</value>
  </data>
  <data name="FormsAndLabels" xml:space="preserve">
    <value>Biểu mẫu và nhãn</value>
  </data>
  <data name="FormsNotExported" xml:space="preserve">
    <value>Một hoặc nhiều biểu mẫu được chọn để xuất là loại do người dùng xác định. Các hình thức loại người dùng xác định không thể được xuất ra.</value>
  </data>
  <data name="FormTypeExists" xml:space="preserve">
    <value>Một dạng biểu mẫu với mô tả này đã tồn tại</value>
  </data>
  <data name="FormTypeInUseOn" xml:space="preserve">
    <value>Loại biểu mẫu #1 đang được sử dụng trên bố cục biểu mẫu #2. Loại hình không thể bị xóa.</value>
  </data>
  <data name="FormTypes" xml:space="preserve">
    <value>Loại biểu mẫu</value>
  </data>
  <data name="FormTypesDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để xem hoặc chỉnh sửa các loại biểu mẫu</value>
  </data>
  <data name="FormTypesTooltipDescription" xml:space="preserve">
    <value>Quản lý các loại biểu mẫu</value>
  </data>
  <data name="FormUsedInProfile" xml:space="preserve">
    <value>Bố cục biểu mẫu #1 được sử dụng trong hồ sơ biểu mẫu #2. Bố trí mẫu đang sử dụng không thể bị xóa.</value>
  </data>
  <data name="GeneralSetup" xml:space="preserve">
    <value>Thiết lập chung</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Nhập vào</value>
  </data>
  <data name="NeverPrint" xml:space="preserve">
    <value>Không bao giờ in</value>
  </data>
  <data name="PromptUser" xml:space="preserve">
    <value>Nhắc người dùng</value>
  </data>
  <data name="ShowPreview" xml:space="preserve">
    <value>Hiển thị xem trước</value>
  </data>
  <data name="Sites" xml:space="preserve">
    <value>Websites</value>
  </data>
  <data name="SystemLayout" xml:space="preserve">
    <value>Bố cục hệ thống</value>
  </data>
  <data name="SystemLayoutCannotBeDeleted" xml:space="preserve">
    <value>Bố cục hệ thống không thể bị xóa.</value>
  </data>
  <data name="SystemTypesCannotBeDeleted" xml:space="preserve">
    <value>Các loại hệ thống không thể bị xóa</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Có</value>
  </data>
</root>