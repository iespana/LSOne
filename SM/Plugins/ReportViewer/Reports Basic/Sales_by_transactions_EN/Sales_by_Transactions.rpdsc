// ReportID is a field that identifies the report, this should be a UUID, please use 
// web page like http://www.famkruithof.net/uuid/uuidgen to generate unique UUID for the report.
ReportID: 8b62fe60-468a-11e5-b970-0800200c9a66

// Name of the report as it will appear in the system menus.
Name: Sale transactions

// Extra description for the report as it will appear in some of the system menus
Description: Sales transactions by staff, stores and terminals

// LanguageID has .NET style ISO language code, this is so that a report can for example exist in English 
// and Swedish. Same fallback rules as in .NET localization apply, for example then de-AU falls back to 
// de and de falls back to en if not found.
LanguageID: en

// Contexts tell where in the system the report should appear, a report can have one or more contexts.
// Supported Contexts are: Report, Button, Store, Customer, Vendor, Terminal, Item. This field should be comma separated.
// Example use: Report, Store
Contexts: Report, Button

// Stored procedures store the SQL code for the stored procedures the report uses. Please make sure
// that the procedures check for existance and delete the existing ones if they exist before adding.
// Also try to make the procedures names unique for each report by for example prefixing them with
// name of the report.
Stored procedures:

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spDB_Transactions]') and OBJECTPROPERTY(id, 
N'IsProcedure') = 1)
drop procedure [dbo].[spDB_Transactions]

GO

CREATE PROCEDURE [dbo].[spDB_Transactions]
(
	@StartDate datetime,
	@EndDate datetime,
	@UsersID nvarchar(max),
	@DataareaID nvarchar(10)
)
AS
set nocount on
declare @docid int

exec sp_xml_preparedocument @docid output, @UsersID

select 
	THEDATE, RECEIPTID, sum(QTY) as QTY,  sum(NETAMOUNTINCLTAX) as NETAMOUNTINCLTAX, sum(WHOLEDISCAMOUNTWITHTAX) as WHOLEDISCAMOUNTWITHTAX, STORE, STAFFID, TERMINALID
from
(
	select 
	Cast(tt.TRANSDATE as smalldatetime) as THEDATE, r.RECEIPTID, r.QTY*-1 as QTY, r.NETAMOUNTINCLTAX*-1 as NETAMOUNTINCLTAX, r.WHOLEDISCAMOUNTWITHTAX, r.STORE, r.STAFFID, r.TERMINALID
	from RBOTRANSACTIONSALESTRANS r
	join (select [text] as USERID from openxml(@docid, '/p', 1) where not [text] is null) us on r.STAFFID = cast(us.USERID as nvarchar(20))
	left outer join RBOTRANSACTIONTABLE tt on r.TRANSACTIONID = tt.TRANSACTIONID and tt.TERMINAL = r.TERMINALID and tt.STORE = r.STORE
	where r.TRANSACTIONSTATUS = 0 and tt.ENTRYSTATUS = 0 and tt.DATAAREAID = @DataareaID and tt.TRANSDATE >= @StartDate and tt.TRANSDATE <= @EndDate
) temp
group by THEDATE, RECEIPTID, STORE, STAFFID, TERMINALID
order by THEDATE

exec sp_xml_removedocument @docid

GO