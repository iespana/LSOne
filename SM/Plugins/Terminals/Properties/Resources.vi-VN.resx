<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Cộng thêm</value>
  </data>
  <data name="Audit" xml:space="preserve">
    <value>Nhật ký</value>
  </data>
  <data name="Auditing" xml:space="preserve">
    <value>Kiểm Toán</value>
  </data>
  <data name="CreatingExcel" xml:space="preserve">
    <value>Xuất dữ liệu sang Excel ...</value>
  </data>
  <data name="CustomerDisplay" xml:space="preserve">
    <value>Màn hình khách hàng</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Ngày</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="DeleteGroup" xml:space="preserve">
    <value>Xoá nhóm</value>
  </data>
  <data name="DeleteGroupQuestion" xml:space="preserve">
    <value>Bạn có chắc muốn xóa nhóm này không?</value>
  </data>
  <data name="DeleteTerminal" xml:space="preserve">
    <value>Xóa thiết bị đầu cuối</value>
  </data>
  <data name="DeleteTerminalQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa thiết bị đầu cuối đã chọn?</value>
  </data>
  <data name="DoNotCopyExistingTerminal" xml:space="preserve">
    <value>Không sao chép thiết bị đầu cuối hiện có</value>
  </data>
  <data name="EditCmd" xml:space="preserve">
    <value>Chỉnh sửa</value>
  </data>
  <data name="EditTerminal" xml:space="preserve">
    <value>Chỉnh sửa thiết bị đầu cuối</value>
  </data>
  <data name="EftSettings" xml:space="preserve">
    <value>Cài đặt EFT</value>
  </data>
  <data name="GenerateExcelReport" xml:space="preserve">
    <value>Tạo báo cáo Excel</value>
  </data>
  <data name="IDMissing" xml:space="preserve">
    <value>ID bị thiếu</value>
  </data>
  <data name="IDMissingQuestion" xml:space="preserve">
    <value>ID bị thiếu. Bạn có muốn tự động tạo ID không?</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Mới</value>
  </data>
  <data name="NewTerminal" xml:space="preserve">
    <value>Tạo mới thiết bị đầu cuối</value>
  </data>
  <data name="NewTerminalDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để tạo một thiết bị đầu cuối mới</value>
  </data>
  <data name="OnlyCharAndNumbers" xml:space="preserve">
    <value>Mã thiết bị đầu cuối chỉ có thể chứa các chữ cái và chữ số</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Vận hành</value>
  </data>
  <data name="OperationID" xml:space="preserve">
    <value>ID vận hành</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Phòng điều hành</value>
  </data>
  <data name="OperationsAuditLog" xml:space="preserve">
    <value>Nhật ký kiểm toán hoạt động</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Nhà điều hành</value>
  </data>
  <data name="OverrideOperator" xml:space="preserve">
    <value>Ghi đè nhà điều hành</value>
  </data>
  <data name="RBOterminalGroup" xml:space="preserve">
    <value>Nhóm thiết bị đầu cuối</value>
  </data>
  <data name="ReactivationMessage" xml:space="preserve">
    <value>Nếu bạn hủy kích hoạt một thiết bị đầu cuối đã được sử dụng và sử dụng nó trên cơ sở dữ liệu mới, bạn cần đặt các chuỗi số giao dịch và số biên nhận thành các giá trị chính xác - điều này chỉ nên được thực hiện khi khôi phục POS. Bạn có chắc chắn muốn hủy kích hoạt thiết bị đầu cuối?</value>
  </data>
  <data name="ReactivationWarning" xml:space="preserve">
    <value>Kích hoạt lại thiết bị đầu cuối</value>
  </data>
  <data name="RibbonNewTerminal" xml:space="preserve">
    <value>Quầy tính tiền</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Cài đặt</value>
  </data>
  <data name="Sites" xml:space="preserve">
    <value>Websites</value>
  </data>
  <data name="SitesTerminals" xml:space="preserve">
    <value>Trang web / Thiết bị đầu cuối</value>
  </data>
  <data name="StoreAndTerminal" xml:space="preserve">
    <value>Cửa hàng và thiết bị đầu cuối</value>
  </data>
  <data name="StoreIDExists" xml:space="preserve">
    <value>Thiết bị đầu cuối có mã này đã được tạo</value>
  </data>
  <data name="StoreSetup" xml:space="preserve">
    <value>Thiết lập cửa hàng</value>
  </data>
  <data name="StoreText" xml:space="preserve">
    <value>Cửa hàng</value>
  </data>
  <data name="TerminalDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để xem thiết bị đầu cuối</value>
  </data>
  <data name="TerminalGroup" xml:space="preserve">
    <value>Nhóm thiết bị đầu cuối</value>
  </data>
  <data name="TerminalGroupConnection" xml:space="preserve">
    <value>Kết nối nhóm thiết bị đầu cuối</value>
  </data>
  <data name="TerminalGroupDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để xem các nhóm thiết bị đầu cuối</value>
  </data>
  <data name="TerminalGroups" xml:space="preserve">
    <value>Nhóm thiết bị đầu cuối</value>
  </data>
  <data name="TerminalGroupsHeaderText" xml:space="preserve">
    <value>Nhóm thiết bị đầu cuối</value>
  </data>
  <data name="TerminalLog" xml:space="preserve">
    <value>Log của thiết bị đầu cuối</value>
  </data>
  <data name="TerminalOperationAudit" xml:space="preserve">
    <value>Kiểm toán hoạt động của thiết bị đầu cuối</value>
  </data>
  <data name="TerminalOperationLog" xml:space="preserve">
    <value>Log của thiết bị đầu cuối</value>
  </data>
  <data name="Terminals" xml:space="preserve">
    <value>Thiết bị đầu cuối</value>
  </data>
  <data name="TerminalsHeaderText" xml:space="preserve">
    <value>Thiết bị đầu cuối</value>
  </data>
  <data name="TerminalText" xml:space="preserve">
    <value>Quầy tính tiền</value>
  </data>
  <data name="TerminalTooltipDescription" xml:space="preserve">
    <value>Mở danh sách các thiết bị đầu cuối để xem và quản lý các thiết bị đầu cuối</value>
  </data>
  <data name="TerminalWithinStoreExists" xml:space="preserve">
    <value>Thiết bị đầu cuối có mã này đã tồn tại trong cửa hàng này</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Thời gian</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Công Cụ</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Chế độ xem</value>
  </data>
  <data name="ViewTerminalOperationAuditDescription" xml:space="preserve">
    <value>Xem lại các hoạt động đã được chạy trên thiết bị đầu cuối</value>
  </data>
</root>