<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activate" xml:space="preserve">
    <value>Activeren</value>
  </data>
  <data name="AddToGiftCard" xml:space="preserve">
    <value>Aan cadeaukaart toevoegen...</value>
  </data>
  <data name="CouldNotConnectToStoreServer" xml:space="preserve">
    <value>Kon geen verbinding tot stand brengen met Site Service</value>
  </data>
  <data name="Deactivate" xml:space="preserve">
    <value>Uitschakelen</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="DeleteGiftCard" xml:space="preserve">
    <value>Cadeaukaart verwijderen</value>
  </data>
  <data name="DeleteGiftCardQuestion" xml:space="preserve">
    <value>Weet u zeker dat u de geselecteerde cadeaukaart wilt verwijderen?</value>
  </data>
  <data name="DeleteGiftCards" xml:space="preserve">
    <value>Cadeaukaarten verwijderen</value>
  </data>
  <data name="DeleteGiftCardsQuestion" xml:space="preserve">
    <value>Weet u zeker dat u de geselecteerde cadeaukaarten wilt verwijderen?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bewerken</value>
  </data>
  <data name="EnterAmountToAddToGiftCard" xml:space="preserve">
    <value>Bedrag invoeren om aan de geselecteerde cadeaukaart toe te voegen</value>
  </data>
  <data name="GiftCard" xml:space="preserve">
    <value>Cadeaubon</value>
  </data>
  <data name="GiftcardCreditMemo" xml:space="preserve">
    <value>Cadeaukaarten/Creditnota's</value>
  </data>
  <data name="GiftCards" xml:space="preserve">
    <value>Cadeaukaarten</value>
  </data>
  <data name="GiftCardsDescription" xml:space="preserve">
    <value>Deze optie gebruiken om cadeaukaarten te zoeken en te bekijken</value>
  </data>
  <data name="GiftCardsOperationDescription" xml:space="preserve">
    <value>Laat een menu zien met bewerkingen met cadeaukaarten</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nieuw</value>
  </data>
  <data name="NewGiftCards" xml:space="preserve">
    <value>Nieuwe cadeaukaart(en)</value>
  </data>
  <data name="NewGiftCardsDescription" xml:space="preserve">
    <value>Deze optie gebruiken om (een) nieuwe cadeaukaart(en) aan te maken</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Nee</value>
  </data>
  <data name="NoStoreServerIsSetUp" xml:space="preserve">
    <value>Site Service werd nog niet geconfigureerd</value>
  </data>
  <data name="Profiles" xml:space="preserve">
    <value>Profielen</value>
  </data>
  <data name="Retail" xml:space="preserve">
    <value>Retail</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Gebruik</value>
  </data>
  <data name="ViewGiftCards" xml:space="preserve">
    <value>Cadeaukaarten bekijken</value>
  </data>
  <data name="ViewPOSUser" xml:space="preserve">
    <value>POS-gebruiker bekijken</value>
  </data>
  <data name="ViewStore" xml:space="preserve">
    <value>Winkel bekijken</value>
  </data>
  <data name="ViewTerminal" xml:space="preserve">
    <value>Kassa bekijken</value>
  </data>
  <data name="ViewUser" xml:space="preserve">
    <value>Gebruiker bekijken</value>
  </data>
  <data name="Vouchers" xml:space="preserve">
    <value>Bonnen</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="ChangingNumberSequenceStartingPoint" xml:space="preserve">
    <value>Door het beginpunt van de reeks te wijzigen, stelt u een nieuw beginpunt voor de nummerreeks in.</value>
  </data>
  <data name="CurrentSequenceHigher" xml:space="preserve">
    <value>Het huidige beginpunt van de reeks is {0}, dit is hoger dan het door u geselecteerde beginpunt {1},</value>
  </data>
  <data name="GiftCardsTooltipDescription" xml:space="preserve">
    <value>Nieuwe cadeaukaarten aanmaken en bestaande cadeaukaarten bekijken</value>
  </data>
  <data name="SelectHigherSequenceStart" xml:space="preserve">
    <value>Selecteer een hoger beginpunt van de reeks.</value>
  </data>
  <data name="StartingPointCanNotBeLower" xml:space="preserve">
    <value>Het beginpunt van de reeks mag niet lager zijn dan het huidige beginpunt.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Saldo</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Valuta</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Leeg</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Niet actief</value>
  </data>
  <data name="Refillable" xml:space="preserve">
    <value>Kunnen worden aangevuld</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Actief</value>
  </data>
  <data name="GiftCardID" xml:space="preserve">
    <value>Cadeaubon-id</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>Niet leeg</value>
  </data>
</root>