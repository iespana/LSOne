<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="Deactivate" xml:space="preserve">
    <value>Désactiver</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="Profiles" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="Activate" xml:space="preserve">
    <value>Activer</value>
  </data>
  <data name="AddToGiftCard" xml:space="preserve">
    <value>Ajouter à la carte cadeau...</value>
  </data>
  <data name="CouldNotConnectToStoreServer" xml:space="preserve">
    <value>Impossible de se connecter au service de site</value>
  </data>
  <data name="DeleteGiftCard" xml:space="preserve">
    <value>Supprimer la carte cadeau</value>
  </data>
  <data name="DeleteGiftCardQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer la carte cadeau sélectionnée ?</value>
  </data>
  <data name="DeleteGiftCards" xml:space="preserve">
    <value>Supprimer les cartes cadeau</value>
  </data>
  <data name="DeleteGiftCardsQuestion" xml:space="preserve">
    <value>Êtes-vous sûr(e) de vouloir supprimer les cartes cadeaux sélectionnées ?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="EnterAmountToAddToGiftCard" xml:space="preserve">
    <value>Tapez un montant pour l'ajouter à la carte cadeau choisie</value>
  </data>
  <data name="GiftCard" xml:space="preserve">
    <value>Carte cadeau</value>
  </data>
  <data name="GiftcardCreditMemo" xml:space="preserve">
    <value>Cartes cadeau / Notes de crédit</value>
  </data>
  <data name="GiftCards" xml:space="preserve">
    <value>Cartes cadeau</value>
  </data>
  <data name="GiftCardsDescription" xml:space="preserve">
    <value>Utilisez cette option pour rechercher et afficher les cartes cadeau</value>
  </data>
  <data name="GiftCardsOperationDescription" xml:space="preserve">
    <value>Affiche un menu avec des opérations de carte cadeau</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nouveau</value>
  </data>
  <data name="NewGiftCards" xml:space="preserve">
    <value>Nouvelle(s) carte(s) cadeau</value>
  </data>
  <data name="NewGiftCardsDescription" xml:space="preserve">
    <value>Utilisez cette option pour créer une (de) nouvelle(s) carte(s) cadeau(x)</value>
  </data>
  <data name="NoStoreServerIsSetUp" xml:space="preserve">
    <value>Le service de site n'a pas encore été configuré</value>
  </data>
  <data name="Retail" xml:space="preserve">
    <value>Vente au détail</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Utilisation</value>
  </data>
  <data name="ViewGiftCards" xml:space="preserve">
    <value>Afficher les cartes cadeau</value>
  </data>
  <data name="ViewPOSUser" xml:space="preserve">
    <value>Afficher l'utilisateur PDV</value>
  </data>
  <data name="ViewStore" xml:space="preserve">
    <value>Afficher le magasin</value>
  </data>
  <data name="ViewTerminal" xml:space="preserve">
    <value>Afficher le terminal</value>
  </data>
  <data name="ViewUser" xml:space="preserve">
    <value>Afficher l'utilisateur</value>
  </data>
  <data name="Vouchers" xml:space="preserve">
    <value>Bons</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="ChangingNumberSequenceStartingPoint" xml:space="preserve">
    <value>En modifiant le début de la séquence, vous définissez un nouveau point de départ pour la séquence de numéros.</value>
  </data>
  <data name="CurrentSequenceHigher" xml:space="preserve">
    <value>Actuellement, le début de séquence est {0}, il est supérieur au début de séquence {1] que vous avez sélectionné.</value>
  </data>
  <data name="GiftCardsTooltipDescription" xml:space="preserve">
    <value>Créer de nouvelles cartes cadeaux et afficher les cartes existantes</value>
  </data>
  <data name="SelectHigherSequenceStart" xml:space="preserve">
    <value>Sélectionnez un début de séquence plus élevé.</value>
  </data>
  <data name="StartingPointCanNotBeLower" xml:space="preserve">
    <value>Le point de départ de la séquence ne peut être réglé sur un chiffre inférieur au point de départ actuel.</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Solde</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Devise</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Vide</value>
  </data>
  <data name="GiftCardID" xml:space="preserve">
    <value>ID carte cadeau</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="Refillable" xml:space="preserve">
    <value>Rechargeable </value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>Non vide</value>
  </data>
</root>