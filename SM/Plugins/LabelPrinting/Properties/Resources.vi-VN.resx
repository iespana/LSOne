<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Thực thi</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Cộng thêm</value>
  </data>
  <data name="AddNewLine" xml:space="preserve">
    <value>Nhiều máy in yêu cầu các lệnh RAW được gửi đến máy in kết thúc bằng dòng mới. 

Mẫu hiện tại không kết thúc với một dòng mới. Bạn có muốn có thêm một dòng mới?</value>
  </data>
  <data name="CodepageNotFound" xml:space="preserve">
    <value>Bảng mã được chỉ định không tồn tại hoặc không được biết</value>
  </data>
  <data name="ColCodepage" xml:space="preserve">
    <value>Mã trang</value>
  </data>
  <data name="ColContext" xml:space="preserve">
    <value>Nội dung</value>
  </data>
  <data name="ColDescription" xml:space="preserve">
    <value>Mô tả:</value>
  </data>
  <data name="ColID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ColName" xml:space="preserve">
    <value>Tên:</value>
  </data>
  <data name="CustomerLabelTemplateDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để quản lý các mẫu nhãn in cho khách hàng</value>
  </data>
  <data name="CustomerLabelTemplateTooltipDescription" xml:space="preserve">
    <value>Quản lý mẫu in cho nhãn của khách hàng như địa chỉ và nhãn vận chuyển</value>
  </data>
  <data name="CustomerLableTemplates" xml:space="preserve">
    <value>Mẫu nhãn hàng của khách hàng</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Khách hàng</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Xóa</value>
  </data>
  <data name="DeleteLabelTemplates" xml:space="preserve">
    <value>Xóa các mẫu nhãn hàng</value>
  </data>
  <data name="DeleteLabelTemplatesQuestion" xml:space="preserve">
    <value>Bạn có chắc chắn muốn xóa các mẫu nhãn đã chọn?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Chỉnh sửa</value>
  </data>
  <data name="ErrorPrintingLabels" xml:space="preserve">
    <value>Lỗi in nhãn</value>
  </data>
  <data name="FormsAndLabels" xml:space="preserve">
    <value>Biểu mẫu và nhãn</value>
  </data>
  <data name="GeneralSetup" xml:space="preserve">
    <value>Thiết lập chung</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Mặt hàng</value>
  </data>
  <data name="ItemLabelTemplateDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để quản lý các mẫu in nhãn cho các mặt hàng</value>
  </data>
  <data name="ItemLabelTemplates" xml:space="preserve">
    <value>Mẫu nhãn mặt hàng</value>
  </data>
  <data name="ItemLabelTemplateTooltipDescription" xml:space="preserve">
    <value>Quản lý mẫu in cho nhãn mặt hàng như giá kệ hoặc nhãn giá</value>
  </data>
  <data name="LabelExistsError" xml:space="preserve">
    <value>Một nhãn cho nội dung này với tên này đã tồn tại</value>
  </data>
  <data name="LabelPrinting" xml:space="preserve">
    <value>In nhãn</value>
  </data>
  <data name="LabelPrintingServiceUnavailable" xml:space="preserve">
    <value>Dịch vụ in nhãn không có sẵn</value>
  </data>
  <data name="Labels" xml:space="preserve">
    <value>Nhãn</value>
  </data>
  <data name="LabelTemplate" xml:space="preserve">
    <value>Mẫu nhãn hàng</value>
  </data>
  <data name="LabelTemplates" xml:space="preserve">
    <value>Các mẫu nhãn</value>
  </data>
  <data name="LabelTemplatesDescription" xml:space="preserve">
    <value>Sử dụng tùy chọn này để quản lý các mẫu nhãn in</value>
  </data>
  <data name="NoEntitesPassedToDialog" xml:space="preserve">
    <value>Không có thực thể để in được chuyển đến hộp thoại. Không có gì để in.</value>
  </data>
  <data name="NoLabelSelected" xml:space="preserve">
    <value>Không có mẫu nhãn đã được chọn. Vui lòng chọn một mẫu nhãn trước khi tiếp tục.</value>
  </data>
  <data name="NoPrinterSelected" xml:space="preserve">
    <value>Không có máy in đã được chọn. Vui lòng chọn một máy in trước khi tiếp tục.</value>
  </data>
  <data name="PossiblyInvalidTemplate" xml:space="preserve">
    <value>Có thể mẫu không hợp lệ</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Mẫu</value>
  </data>
</root>