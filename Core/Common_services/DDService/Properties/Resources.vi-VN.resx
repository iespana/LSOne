<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Close" xml:space="preserve">
    <value>Đóng</value>
  </data>
  <data name="DataDirectorConnectedMsg" xml:space="preserve">
    <value>Đã kết nối với Data Director</value>
  </data>
  <data name="DataDirectorConnectingMsg" xml:space="preserve">
    <value>Đang kết nối...</value>
  </data>
  <data name="DataDirectorDialogReadDesign" xml:space="preserve">
    <value>Read design</value>
  </data>
  <data name="DataDirectorDialogTestConnection" xml:space="preserve">
    <value>Kiểm tra kết nối</value>
  </data>
  <data name="DataDirectorErrorFormatMsg" xml:space="preserve">
    <value>{0} / Mã lỗi: {1}</value>
  </data>
  <data name="DataDirectorErrorMsg" xml:space="preserve">
    <value>Lỗi trong Data Director: {0}</value>
  </data>
  <data name="DataDirectorExceptionMsg" xml:space="preserve">
    <value>Ngoại lệ chưa được xử lý trong Data Director: {0}, {1}</value>
  </data>
  <data name="DataDirectorInitializingMsg" xml:space="preserve">
    <value>Đang khởi tạo...</value>
  </data>
  <data name="DataDirectorNoAnswerError" xml:space="preserve">
    <value>Không nhận được phản hồi: {0}</value>
  </data>
  <data name="DataDirectorOperationCancelledMsg" xml:space="preserve">
    <value>Hủy bỏ hoạt động</value>
  </data>
  <data name="DataDirectorOperationOkMsg" xml:space="preserve">
    <value>Hoạt động hoàn thành thành công</value>
  </data>
  <data name="DataDirectorReadFieldsForTablesMsg" xml:space="preserve">
    <value>Đọc các trường cho tables {0}</value>
  </data>
  <data name="DataDirectorReadingFieldsMsg" xml:space="preserve">
    <value>Lĩnh vực đọc</value>
  </data>
  <data name="DataDirectorSavingFieldsMsg" xml:space="preserve">
    <value>Lưu trường database</value>
  </data>
  <data name="DataDirectorSavingTablesMsg" xml:space="preserve">
    <value>Lưu database tables</value>
  </data>
  <data name="DataDirectorSendFailedError" xml:space="preserve">
    <value>Gửi thất bại: {0}</value>
  </data>
  <data name="DataDirectorTablesReadMsg" xml:space="preserve">
    <value>Tables đọc: {0}</value>
  </data>
  <data name="DataDirectorTestingMsg" xml:space="preserve">
    <value>Đang kiểm tra kết nối ...</value>
  </data>
  <data name="JobRun" xml:space="preserve">
    <value>Chạy công việc</value>
  </data>
  <data name="JobRunAsNormal" xml:space="preserve">
    <value>Chạy job như bình thường</value>
  </data>
  <data name="JobRunConfirmMsg" xml:space="preserve">
    <value>Bạn có muốn chạy job {0} không?</value>
  </data>
  <data name="JobRunErrorMsg" xml:space="preserve">
    <value>Đã xảy ra lỗi khi yêu cầu chạy job {0}: {1}</value>
  </data>
  <data name="JobRunExceptionMsg" xml:space="preserve">
    <value>Một ngoại lệ chưa được xử lý đã xảy ra khi cố gắng chạy một job: {0}, {1}</value>
  </data>
  <data name="JobRunHeader" xml:space="preserve">
    <value>Chạy công việc</value>
  </data>
  <data name="JobRunNoResponseMsg" xml:space="preserve">
    <value>Scheduler service không đáp ứng yêu cầu. Đảm bảo rằng  Scheduler service đang chạy và được định cấu hình hoặc cài đặt Scheduler service đang trỏ đến đúng máy chủ.</value>
  </data>
  <data name="JobRunOkMsg" xml:space="preserve">
    <value>Job {0} đã được gửi thành công để chạy.</value>
  </data>
  <data name="JobRunServiceError" xml:space="preserve">
    <value> Scheduler service trả về lỗi sau: {0}</value>
  </data>
  <data name="JobRunValidationFailureMsg" xml:space="preserve">
    <value>Job không thể được chạy vì nó không xác nhận. 


{0}</value>
  </data>
  <data name="RunJobErrorStatusFormat" xml:space="preserve">
    <value>{0} job có lỗi, xem nhật ký công việc hoặc nhật ký tin nhắn để biết chi tiết.</value>
  </data>
  <data name="RunJobPendingStatusFormat" xml:space="preserve">
    <value>{0} scheduler job đang được gửi.</value>
  </data>
</root>