<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  <comment>[Term:654]</comment></data>
  <data name="DataDirectorConnectedMsg" xml:space="preserve">
    <value>Connected to Data Director</value>
    <comment>[Term:15421]</comment>
  </data>
  <data name="DataDirectorConnectingMsg" xml:space="preserve">
    <value>Connecting...</value>
    <comment>[Term:575]</comment>
  </data>
  <data name="DataDirectorDialogReadDesign" xml:space="preserve">
    <value>Read design</value>
    <comment>[Term:9983] - Header text (main instruction)</comment>
  </data>
  <data name="DataDirectorDialogTestConnection" xml:space="preserve">
    <value>Test connection</value>
    <comment>[Term:671] - Header text (main instruction)</comment>
  </data>
  <data name="DataDirectorErrorFormatMsg" xml:space="preserve">
    <value>{0} / Error Code: {1}</value>
    <comment>[Term:15609] - {0}=error message, {1}=integer error code</comment>
  </data>
  <data name="DataDirectorErrorMsg" xml:space="preserve">
    <value>Error in Data Director: {0}</value>
    <comment>[Term:15457] - {0}=detailed error message</comment>
  </data>
  <data name="DataDirectorExceptionMsg" xml:space="preserve">
    <value>Unhandled exception in Data Director: {0}, {1}</value>
    <comment>[Term:15586] - {0}=exception name, {1}=detailed error message</comment>
  </data>
  <data name="DataDirectorInitializingMsg" xml:space="preserve">
    <value>Initializing...</value>
    <comment>[Term:15472]</comment>
  </data>
  <data name="DataDirectorNoAnswerError" xml:space="preserve">
    <value>No response was received: {0}</value>
    <comment>[Term:15493] - {0}=detailed error message</comment>
  </data>
  <data name="DataDirectorOperationCancelledMsg" xml:space="preserve">
    <value>Operation cancelled</value>
    <comment>[Term:15497]</comment>
  </data>
  <data name="DataDirectorOperationOkMsg" xml:space="preserve">
    <value>Operation completed sucessfully</value>
    <comment>[Term:15498]</comment>
  </data>
  <data name="DataDirectorReadFieldsForTablesMsg" xml:space="preserve">
    <value>Read fields for {0} tables</value>
    <comment>[Term:15504] - {0}=number of tables</comment>
  </data>
  <data name="DataDirectorReadingFieldsMsg" xml:space="preserve">
    <value>Reading fields</value>
    <comment>[Term:15505]</comment>
  </data>
  <data name="DataDirectorSavingFieldsMsg" xml:space="preserve">
    <value>Saving database fields</value>
    <comment>[Term:15539]</comment>
  </data>
  <data name="DataDirectorSavingTablesMsg" xml:space="preserve">
    <value>Saving database tables</value>
    <comment>[Term:15540]</comment>
  </data>
  <data name="DataDirectorSendFailedError" xml:space="preserve">
    <value>Send failed: {0}</value>
    <comment>[Term:15551] - {0}=detailed error message</comment>
  </data>
  <data name="DataDirectorTablesReadMsg" xml:space="preserve">
    <value>Tables read: {0}</value>
    <comment>[Term:15570] - {0}=number of tables</comment>
  </data>
  <data name="DataDirectorTestingMsg" xml:space="preserve">
    <value>Testing connection...</value>
  <comment>[Term:23586]</comment></data>
  <data name="JobRun" xml:space="preserve">
    <value>Run job</value>
  <comment>[Term:15534]</comment></data>
  <data name="JobRunAsNormal" xml:space="preserve">
    <value>Run job as normal</value>
  <comment>[Term:21781]</comment></data>
  <data name="JobRunConfirmMsg" xml:space="preserve">
    <value>Do you want to run job {0}?</value>
    <comment>[Term:15444] - {0}=name/description of job</comment>
  </data>
  <data name="JobRunErrorMsg" xml:space="preserve">
    <value>An error occurred when requesting a run of job {0}: {1}</value>
    <comment>[Term:15411] - {0}=job name</comment>
  </data>
  <data name="JobRunExceptionMsg" xml:space="preserve">
    <value>An unhandled exception occurred when trying to run a job: {0}, {1}</value>
    <comment>[Term:15413] - {0}=exception type, {1}=detailed error message</comment>
  </data>
  <data name="JobRunHeader" xml:space="preserve">
    <value>Run job</value>
  <comment>[Term:15534]</comment></data>
  <data name="JobRunNoResponseMsg" xml:space="preserve">
    <value>The Scheduler service did not respond to the request. Make sure that the Service is running and configured or Scheduler Setup is pointing to correct host.</value>
  <comment>[Term:21624]</comment></data>
  <data name="JobRunOkMsg" xml:space="preserve">
    <value>Job {0} was successfully submitted for run.</value>
    <comment>[Term:15475] - {0}=job name</comment>
  </data>
  <data name="JobRunServiceError" xml:space="preserve">
    <value>The Scheduler service returned the following error: {0}</value>
    <comment>[Term:15573] - {0}=detailed error message</comment>
  </data>
  <data name="JobRunValidationFailureMsg" xml:space="preserve">
    <value>The job can not be run because it failed validation.

{0}</value>
    <comment>[Term:15576] - {0}=detailed description of failure</comment>
  </data>
  <data name="RunJobErrorStatusFormat" xml:space="preserve">
    <value>{0} job(s) have errors, see job log or message log for details.</value>
  <comment>[Term:16171]</comment></data>
  <data name="RunJobPendingStatusFormat" xml:space="preserve">
    <value>{0} scheduler job(s) are being submitted.</value>
  <comment>[Term:16172]</comment></data>
</root>