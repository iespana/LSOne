/*
	Incident No.	: ONE-8000
	Responsible		: Ovidiu Caba
	Sprint			: Maltz
	Date created	: 09.05.2018

	Description		: Adding columns CREATED and MODIFIED to RETAILGROUP, RETAILDEPARTMENT, RETAILDIVISION
*/

USE LSPOSNET

-- Add the columns

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILGROUP' AND COLUMN_NAME = 'CREATED')
BEGIN
	ALTER TABLE RETAILGROUP ADD CREATED DATETIME2 NULL
	ALTER TABLE RETAILGROUP ADD CONSTRAINT DF_RETAILGROUP_CREATED DEFAULT GETDATE() FOR CREATED
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILGROUP' AND COLUMN_NAME = 'MODIFIED')
BEGIN
	ALTER TABLE RETAILGROUP ADD MODIFIED DATETIME2 NULL
	ALTER TABLE RETAILGROUP ADD CONSTRAINT DF_RETAILGROUP_MODIFIED DEFAULT GETDATE() FOR MODIFIED
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILDEPARTMENT' AND COLUMN_NAME = 'CREATED')
BEGIN
	ALTER TABLE RETAILDEPARTMENT ADD CREATED DATETIME2 NULL
	ALTER TABLE RETAILDEPARTMENT ADD CONSTRAINT DF_RETAILDEPARTMENT_CREATED DEFAULT GETDATE() FOR CREATED
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILDEPARTMENT' AND COLUMN_NAME = 'MODIFIED')
BEGIN
	ALTER TABLE RETAILDEPARTMENT ADD MODIFIED DATETIME2 NULL
	ALTER TABLE RETAILDEPARTMENT ADD CONSTRAINT DF_RETAILDEPARTMENT_MODIFIED DEFAULT GETDATE() FOR MODIFIED
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILDIVISION' AND COLUMN_NAME = 'CREATED')
BEGIN
	ALTER TABLE RETAILDIVISION ADD CREATED DATETIME2 NULL
	ALTER TABLE RETAILDIVISION ADD CONSTRAINT DF_RETAILDIVISION_CREATED DEFAULT GETDATE() FOR CREATED
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RETAILDIVISION' AND COLUMN_NAME = 'MODIFIED')
BEGIN
	ALTER TABLE RETAILDIVISION ADD MODIFIED DATETIME2 NULL
	ALTER TABLE RETAILDIVISION ADD CONSTRAINT DF_RETAILDIVISION_MODIFIED DEFAULT GETDATE() FOR MODIFIED
END
GO

-- Import data from Audit only if data exists, otherwise we get an error when creating new databases
if((SELECT COUNT(*) FROM RETAILGROUP) > 0) AND EXISTS (SELECT * FROM LSPOSNET_Audit.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'RETAILGROUPLog')	
BEGIN
	;WITH CREATEDDATES
	AS
	(
		SELECT MASTERID, MIN(AUDITDATE)	AS AUDITDATE	-- SELECT MIN AUDITDATE, AS BEING THE DATE OF CREATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILGROUPLog
		GROUP BY MASTERID
	),
	MODIFIEDDATES
	AS
	(
		SELECT MASTERID, MAX(AUDITDATE)	AS AUDITDATE	-- SELECT MAX AUDITDATE, AS BEING THE DATE OF THE LAST MODIFICATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILGROUPLog
		GROUP BY MASTERID
	)
	UPDATE RG
	SET CREATED = CD.AUDITDATE,
		MODIFIED = MD.AUDITDATE
	FROM RETAILGROUP RG
	LEFT JOIN CREATEDDATES CD ON RG.MASTERID = CD.MASTERID
	LEFT JOIN MODIFIEDDATES MD ON RG.MASTERID = MD.MASTERID
	WHERE RG.CREATED IS NULL AND RG.MODIFIED IS NULL
END
GO

if((SELECT COUNT(*) FROM RETAILDEPARTMENT) > 0) AND EXISTS (SELECT * FROM LSPOSNET_Audit.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'RETAILDEPARTMENTLog')	
BEGIN
	;WITH CREATEDDATES
	AS
	(
		SELECT MASTERID, MIN(AUDITDATE)	AS AUDITDATE	-- SELECT MIN AUDITDATE, AS BEING THE DATE OF CREATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILDEPARTMENTLog
		GROUP BY MASTERID
	),
	MODIFIEDDATES
	AS
	(
		SELECT MASTERID, MAX(AUDITDATE)	AS AUDITDATE	-- SELECT MAX AUDITDATE, AS BEING THE DATE OF THE LAST MODIFICATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILDEPARTMENTLog
		GROUP BY MASTERID
	)
	UPDATE RD
	SET CREATED = CD.AUDITDATE,
		MODIFIED = MD.AUDITDATE
	FROM RETAILDEPARTMENT RD
	LEFT JOIN CREATEDDATES CD ON RD.MASTERID = CD.MASTERID
	LEFT JOIN MODIFIEDDATES MD ON RD.MASTERID = MD.MASTERID
	WHERE RD.CREATED IS NULL AND RD.MODIFIED IS NULL
END
GO

if((SELECT COUNT(*) FROM RETAILDIVISION) > 0) AND EXISTS (SELECT * FROM LSPOSNET_Audit.INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'RETAILDIVISIONLog')		
BEGIN
	;WITH CREATEDDATES
	AS
	(
		SELECT MASTERID, MIN(AUDITDATE)	AS AUDITDATE	-- SELECT MIN AUDITDATE, AS BEING THE DATE OF CREATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILDIVISIONLog
		GROUP BY MASTERID
	),
	MODIFIEDDATES
	AS
	(
		SELECT MASTERID, MAX(AUDITDATE)	AS AUDITDATE	-- SELECT MAX AUDITDATE, AS BEING THE DATE OF THE LAST MODIFICATION OF THE ROW
		FROM LSPOSNET_Audit.DBO.RETAILDIVISIONLog
		GROUP BY MASTERID
	)
	UPDATE RD
	SET CREATED = CD.AUDITDATE,
		MODIFIED = MD.AUDITDATE
	FROM RETAILDIVISION RD
	JOIN CREATEDDATES CD ON RD.MASTERID = CD.MASTERID
	JOIN MODIFIEDDATES MD ON RD.MASTERID = MD.MASTERID
	WHERE RD.CREATED IS NULL AND RD.MODIFIED IS NULL
END
GO

-- Update remaining data with GETDA() since we can't have NULL values in the CREATED/MODIFIED columns
-- We need to turn off auditing since the table might not exist yet
BEGIN TRANSACTION

UPDATE SYSTEMSETTINGS
SET VALUE = 0
WHERE GUID = '17E851C0-3037-11DF-9AAE-0800200C9A66'

UPDATE RETAILGROUP
SET CREATED = GETDATE()
WHERE CREATED IS NULL

UPDATE RETAILGROUP
SET MODIFIED = GETDATE()
WHERE MODIFIED IS NULL

UPDATE RETAILDEPARTMENT
SET CREATED = GETDATE()
WHERE CREATED IS NULL

UPDATE RETAILDEPARTMENT
SET MODIFIED = GETDATE()
WHERE MODIFIED IS NULL

UPDATE RETAILDIVISION
SET CREATED = GETDATE()
WHERE CREATED IS NULL

UPDATE RETAILDIVISION
SET MODIFIED = GETDATE()
WHERE MODIFIED IS NULL

UPDATE SYSTEMSETTINGS
SET VALUE = 1
WHERE GUID = '17E851C0-3037-11DF-9AAE-0800200C9A66'

COMMIT
GO


-- The columns should not be nullable

ALTER TABLE RETAILGROUP
ALTER COLUMN CREATED DATETIME2 NOT NULL
GO

ALTER TABLE RETAILGROUP
ALTER COLUMN MODIFIED DATETIME2 NOT NULL
GO

ALTER TABLE RETAILDEPARTMENT
ALTER COLUMN CREATED DATETIME2 NOT NULL
GO

ALTER TABLE RETAILDEPARTMENT
ALTER COLUMN MODIFIED DATETIME2 NOT NULL
GO

ALTER TABLE RETAILDIVISION
ALTER COLUMN CREATED DATETIME2 NOT NULL
GO

ALTER TABLE RETAILDIVISION
ALTER COLUMN MODIFIED DATETIME2 NOT NULL
GO