/*
	Incident No.	: ONE-8805
	Responsible		: Adrian Chiorean
	Sprint			: Kunivas
	Date created	: 29.06.2018

	Description		: Add ORIGNUMOFTRANSACTIONLINES column to RBOTRANSACTIONTABLE
*/

USE LSPOSNET

IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'RBOTRANSACTIONTABLE' AND COLUMN_NAME = 'ORIGNUMOFTRANSACTIONLINES')
BEGIN
	ALTER TABLE RBOTRANSACTIONTABLE ADD ORIGNUMOFTRANSACTIONLINES INT NULL
END
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spRecalculateOriginalNumberOfTransactionLines]'))
BEGIN
	DROP PROCEDURE [dbo].[spRecalculateOriginalNumberOfTransactionLines]
END
GO

CREATE PROCEDURE [dbo].[spRecalculateOriginalNumberOfTransactionLines]
(
	@FromDate datetime = NULL,
	@ToDate datetime = NULL,
	@IncludeCalculatedTransactions bit = 0
)
AS
;WITH countCTE AS
(
SELECT T.TRANSACTIONID, T.TRANSDATE, T.ORIGNUMOFTRANSACTIONLINES, COALESCE(C.CNT, 0) AS TOTALLINES

FROM RBOTRANSACTIONTABLE T

LEFT JOIN 
(
	SELECT X.TRANSACTIONID, SUM(X.CNT) AS CNT FROM (
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONPAYMENTTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONSALESTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONINFOCODETRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONDININGTABLE GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONLOYALTYPOINTTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONORDERINVOICETRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONINCOMEEXPEN20158 GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONFUELTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONDISCOUNTTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONTAXTRANS GROUP BY TRANSACTIONID
		UNION
		SELECT TRANSACTIONID, COUNT(TRANSACTIONID) AS CNT FROM RBOTRANSACTIONEFTINFOTRANS GROUP BY TRANSACTIONID
		) X GROUP BY X.TRANSACTIONID
	) C ON C.TRANSACTIONID = T.TRANSACTIONID AND (@IncludeCalculatedTransactions = 1 OR T.ORIGNUMOFTRANSACTIONLINES IS NULL)
											 AND (@FromDate IS NULL OR T.TRANSDATE >= @FromDate) 
											 AND (@ToDate IS NULL OR T.TRANSDATE < @ToDate)
)
UPDATE countCTE SET ORIGNUMOFTRANSACTIONLINES = TOTALLINES 
		WHERE (@IncludeCalculatedTransactions = 1 OR ORIGNUMOFTRANSACTIONLINES IS NULL)
		AND (@FromDate IS NULL OR TRANSDATE >= @FromDate) 
		AND (@ToDate IS NULL OR TRANSDATE < @ToDate)
GO