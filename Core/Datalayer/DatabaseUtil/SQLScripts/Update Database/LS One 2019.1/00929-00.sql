/*
	Incident No.	: ONE-8363 Form layout editor - Windows printer selection
	Responsible		: Hörður Kristjánsson
	Sprint			: Vega
	Date created	: 18.06.2019

	Description		: Added windows printer configuration column for form layouts
*/

USE LSPOSNET

-- Use a temp table because the information needs to exist for the entire script. Each go would clear out any variable scope.
CREATE TABLE #TEMP00928 (
FORMLAYOUTCOLUMNADDED BIT NOT NULL)

INSERT INTO #TEMP00928 VALUES (0)

-- Add field for hardware profile and migrate data
IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'POSISFORMLAYOUT' AND COLUMN_NAME = 'WINDOWSPRINTERCONFIGURATIONID')
BEGIN
	ALTER TABLE POSISFORMLAYOUT ADD WINDOWSPRINTERCONFIGURATIONID NVARCHAR(40) NULL
	UPDATE #TEMP00928 SET FORMLAYOUTCOLUMNADDED = 1

	-- MARK OLD COLUMS AS OBSOLETE
	EXECUTE spDB_SetFieldDescription_1_0 'POSISFORMLAYOUT', 'WINDOWSPRINTERNAME', '[Obsolete, ONE-8363] Configuration moved to WINDOWSPRINTERCONFIGURATION';

	-- ADD DESCRIPTION TO NEW COLUMN
	EXECUTE spDB_SetFieldDescription_1_0 'POSISFORMLAYOUT', 'WINDOWSPRINTERCONFIGURATIONID', 'The ID of the windows printer to use. The printer itself is configured in the table WINDOWSPRINTERCONFIGURATION';
END
GO

-- The form layouts don't have any detail information about fonts, sizes etc. So we just load the data with some default values
DECLARE @NEWCONFIGID INT = 0
DECLARE @ENTITYID NVARCHAR(40)
DECLARE @DEVICENAME NVARCHAR(200)
DECLARE @FONTNAME NVARCHAR(100) = 'Courier New'
DECLARE @FONTSIZE REAL = 9.5
DECLARE @WIDEHIGHFONTSIZE REAL = 18
DECLARE @LEFTMARGIN INT = 45
DECLARE @RIGHTMARGIN INT = 5
DECLARE @TOPMARGIN INT = 5
DECLARE @BOTTOMMARGIN INT = 60
DECLARE @PRINTDESIGNBOXES BIT = 0
DECLARE @FOLDERLOCATION NVARCHAR(500) = 'C:\ProgramData\LS Retail\LS One POS\'
DECLARE @DATAAREAID NVARCHAR(4)


IF EXISTS (SELECT 1 FROM #TEMP00928 WHERE FORMLAYOUTCOLUMNADDED = 1)
BEGIN
	-- We assume this has already been created by script 00920-00 where the hardware profiles are migrated
	SELECT @NEWCONFIGID = NEXTREC FROM NUMBERSEQUENCEVALUE WHERE NUMBERSEQUENCE = 'WINDOWSPRINTER'
	
	

	DECLARE FORMLAYOUTCURSOR CURSOR FOR
		SELECT ID, 
			   WINDOWSPRINTERNAME,
			   DATAAREAID		   
		FROM POSISFORMLAYOUT WHERE USEWINDOWSPRINTER = 1 AND WINDOWSPRINTERNAME IS NOT NULL AND WINDOWSPRINTERNAME != ''

	OPEN FORMLAYOUTCURSOR

	FETCH NEXT FROM FORMLAYOUTCURSOR INTO @ENTITYID, @DEVICENAME, @DATAAREAID
	

	WHILE @@FETCH_STATUS = 0
	BEGIN		
		DECLARE @EXISTINGCONFIGID NVARCHAR(40) 
		SELECT @EXISTINGCONFIGID = ID FROM WINDOWSPRINTERCONFIGURATION WHERE DEVICENAME = @DEVICENAME

		IF @EXISTINGCONFIGID IS NOT NULL
		BEGIN			
			UPDATE POSISFORMLAYOUT SET WINDOWSPRINTERCONFIGURATIONID = @EXISTINGCONFIGID WHERE ID = @ENTITYID AND DATAAREAID = @DATAAREAID
		END ELSE BEGIN
			SET @NEWCONFIGID = @NEWCONFIGID + 1

			INSERT INTO WINDOWSPRINTERCONFIGURATION VALUES (FORMAT(@NEWCONFIGID, '0########'), 'Form layout - ' + @ENTITYID, @DEVICENAME, @FONTNAME, @FONTSIZE, @WIDEHIGHFONTSIZE, @LEFTMARGIN, @RIGHTMARGIN, @TOPMARGIN, @BOTTOMMARGIN, @PRINTDESIGNBOXES, @FOLDERLOCATION)

			UPDATE POSISFORMLAYOUT SET WINDOWSPRINTERCONFIGURATIONID = FORMAT(@NEWCONFIGID, '0########') WHERE ID = @ENTITYID AND DATAAREAID = @DATAAREAID
		END		
		
		-- Reset the variable because it's value will not be reset to null by the select if it has been populated by a non-null value already
		SET @EXISTINGCONFIGID = NULL
		FETCH NEXT FROM FORMLAYOUTCURSOR INTO @ENTITYID, @DEVICENAME, @DATAAREAID
	END

	CLOSE FORMLAYOUTCURSOR
	DEALLOCATE FORMLAYOUTCURSOR

	UPDATE NUMBERSEQUENCEVALUE SET NEXTREC = @NEWCONFIGID + 1 WHERE NUMBERSEQUENCE = 'WINDOWSPRINTER'
END

IF OBJECT_ID('tempdb..#TEMP00928') IS NOT NULL DROP TABLE #TEMP00928
GO