/*
	Description		: Fixing incorrect datatype and incorrect field sizes for DataAreaID.
*/

USE LSPOSNET

/* Changing VARCHAR to NVARCHAR */

 if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RESTAURANTSTATION' and COLUMN_NAME = 'KITCHENDISPLAYPROFILEID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RESTAURANTSTATION alter column KITCHENDISPLAYPROFILEID NVARCHAR(20)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOINVENTITEMRETAILGROUP' and COLUMN_NAME = 'POSPERIODICID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RBOINVENTITEMRETAILGROUP alter column POSPERIODICID NVARCHAR(20)
end
  
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'KITCHENDISPLAYBUTTONOPERATIONS' and COLUMN_NAME = 'OPERATIONNAME' and DATA_TYPE = 'VARCHAR')
begin
	alter table KITCHENDISPLAYBUTTONOPERATIONS alter column OPERATIONNAME NVARCHAR(50)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RETAILGROUPREPLENISHMENT' and COLUMN_NAME = 'RETAILGROUPID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RETAILGROUPREPLENISHMENT alter column RETAILGROUPID NVARCHAR(20)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RETAILGROUPREPLENISHMENT' and COLUMN_NAME = 'STOREID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RETAILGROUPREPLENISHMENT alter column STOREID NVARCHAR(20)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOINVENTTABLE' and COLUMN_NAME = 'POSPERIODICID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RBOINVENTTABLE alter column POSPERIODICID NVARCHAR(20)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOTRANSACTIONEFTINFOTRANS' and COLUMN_NAME = 'EXPDATE' and DATA_TYPE = 'VARCHAR')
begin
	alter table RBOTRANSACTIONEFTINFOTRANS alter column EXPDATE NVARCHAR(10)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISBLANKOPERATIONS' and COLUMN_NAME = 'OPERATIONDESCRIPTION' and DATA_TYPE = 'VARCHAR')
begin
	alter table POSISBLANKOPERATIONS drop constraint DF_POSISBLANKOPERATIONS_OPERATIONDESCRIPTION
	alter table POSISBLANKOPERATIONS alter column OPERATIONDESCRIPTION NVARCHAR(50)
	alter table POSISBLANKOPERATIONS add  constraint DF_POSISBLANKOPERATIONS_OPERATIONDESCRIPTION DEFAULT ('') for OPERATIONDESCRIPTION
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'KITCHENDISPLAYLOG' and COLUMN_NAME = 'DATAAREAID' and DATA_TYPE = 'NVARCHAR')
begin
	alter table KITCHENDISPLAYLOG drop constraint PK_KITCHENDISPLAYLOG
	alter table KITCHENDISPLAYLOG alter column DATAAREAID NVARCHAR(4) not null
	alter table KITCHENDISPLAYLOG add constraint PK_KITCHENDISPLAYLOG PRIMARY KEY CLUSTERED 
(
	ID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'KITCHENDISPLAYTIMESTYLE' and COLUMN_NAME = 'DATAAREAID' and DATA_TYPE = 'VARCHAR')
begin
	if exists (select * from INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE where CONSTRAINT_NAME = 'PK_KITCHENDISPLAYTIMESTYLE' and TABLE_NAME = 'KITCHENDISPLAYTIMESTYLE')
	begin
	alter table KITCHENDISPLAYTIMESTYLE drop constraint PK_KITCHENDISPLAYTIMESTYLE
	end
	alter table KITCHENDISPLAYTIMESTYLE alter column DATAAREAID NVARCHAR(4) not null
	alter table KITCHENDISPLAYTIMESTYLE add constraint PK_KITCHENDISPLAYTIMESTYLE PRIMARY KEY CLUSTERED 
(
	KDSTYLEPROFILEID ASC,
	SECONDSPASSED ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RETAILGROUPREPLENISHMENT' and COLUMN_NAME = 'DATAAREAID' and DATA_TYPE = 'VARCHAR')
begin
	alter table RETAILGROUPREPLENISHMENT drop constraint PK_RETAILGROUPREPLENISHMENT
	alter table RETAILGROUPREPLENISHMENT alter column DATAAREAID NVARCHAR(4) not null
	alter table RETAILGROUPREPLENISHMENT add constraint PK_RETAILGROUPREPLENISHMENT PRIMARY KEY CLUSTERED 
(
	ID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF,  IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'KITCHENDISPLAYBUTTONOPERATIONS' and COLUMN_NAME = 'DATAAREAID' and DATA_TYPE = 'VARCHAR')
begin
	alter table KITCHENDISPLAYBUTTONOPERATIONS drop constraint PK_KITCHENDISPLAYBUTTONOPERATIONS
	alter table KITCHENDISPLAYBUTTONOPERATIONS alter column DATAAREAID NVARCHAR(4) not null
	alter table KITCHENDISPLAYBUTTONOPERATIONS add constraint PK_KITCHENDISPLAYBUTTONOPERATIONS PRIMARY KEY CLUSTERED 
(
	OPERATIONID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISSUSPENDEDTRANSACTIONS' and COLUMN_NAME = 'TRANSACTIONID' and DATA_TYPE = 'VARCHAR')
begin
	alter table POSISSUSPENDEDTRANSACTIONS drop constraint PK_POSISSUSPENDEDTRANSACTIONS_NEW
	alter table POSISSUSPENDEDTRANSACTIONS alter column TRANSACTIONID NVARCHAR(50) not null
	alter table POSISSUSPENDEDTRANSACTIONS add constraint PK_POSISSUSPENDEDTRANSACTIONS_NEW PRIMARY KEY CLUSTERED 
(
	TRANSACTIONID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'dbo.KITCHENDISPLAYBUTTONOPERATIONS' and COLUMN_NAME = N'OPERATIONNAME' and DATA_TYPE = N'VARCHAR')
begin
	alter table dbo.KITCHENDISPLAYBUTTONOPERATIONS alter column OPERATIONNAME NVARCHAR(50)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'KITCHENDISPLAYLOG' and COLUMN_NAME = N'DATAAREAID' and DATA_TYPE = N'VARCHAR')
begin
	alter table KITCHENDISPLAYLOG drop constraint PK_KITCHENDISPLAYLOG
	alter table KITCHENDISPLAYLOG alter column DATAAREAID NVARCHAR(4) not null
	alter table KITCHENDISPLAYLOG add constraint PK_KITCHENDISPLAYLOG PRIMARY KEY CLUSTERED 
	(
	ID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
end

 if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'KITCHENDISPLAYBUTTONOPERATIONS' and COLUMN_NAME = N'OPERATIONNAME' and DATA_TYPE = N'VARCHAR')
begin
	alter table KITCHENDISPLAYBUTTONOPERATIONS drop constraint PK_KITCHENDISPLAYBUTTONOPERATIONS
	alter table KITCHENDISPLAYBUTTONOPERATIONS alter column OPERATIONNAME NVARCHAR(50) not null
	alter table KITCHENDISPLAYBUTTONOPERATIONS add constraint PK_KITCHENDISPLAYBUTTONOPERATIONS PRIMARY KEY CLUSTERED 
(
	OPERATIONID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'dbo.KITCHENDISPLAYBUTTONOPERATIONS' and COLUMN_NAME = N'DATAAREAID' and DATA_TYPE = N'VARCHAR')
begin
	alter table KITCHENDISPLAYBUTTONOPERATIONS drop constraint PK_KITCHENDISPLAYBUTTONOPERATIONS
	alter table dbo.KITCHENDISPLAYBUTTONOPERATIONS alter column DATAAREAID NVARCHAR(4) not null
	alter table KITCHENDISPLAYBUTTONOPERATIONS add constraint PK_KITCHENDISPLAYBUTTONOPERATIONS PRIMARY KEY CLUSTERED 
(
	OPERATIONID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end

 /* Changing TEXT to NVARCHAR(MAX) */
 
 if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'CUSTOMERLAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column CUSTOMERLAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'RECEIPTITEMSLAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column RECEIPTITEMSLAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'RECEIPTPAYMENTLAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column RECEIPTPAYMENTLAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'TOTALSLAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column TOTALSLAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'LAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column LAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'CASHCHANGERLAYOUTXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISTILLLAYOUT alter column CASHCHANGERLAYOUTXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISKEYBOARDBUTTONCONTROLB' and COLUMN_NAME = 'ALLES' and DATA_TYPE = 'TEXT')
begin
	alter table POSISKEYBOARDBUTTONCONTROLB alter column ALLES NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISFORMLAYOUT' and COLUMN_NAME = 'HEADERXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISFORMLAYOUT alter column HEADERXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISFORMLAYOUT' and COLUMN_NAME = 'LINESXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISFORMLAYOUT alter column LINESXML NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISFORMLAYOUT' and COLUMN_NAME = 'FOOTERXML' and DATA_TYPE = 'TEXT')
begin
	alter table POSISFORMLAYOUT alter column FOOTERXML NVARCHAR(MAX)
end
  
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISUPGRADES' and COLUMN_NAME = 'UPGRADESCRIPT' and DATA_TYPE = 'TEXT')
begin
	alter table POSISUPGRADES alter column UPGRADESCRIPT NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISUPDATESCRIPT' and COLUMN_NAME = 'SQLSCRIPT' and DATA_TYPE = 'TEXT')
begin
	alter table POSISUPDATESCRIPT alter column SQLSCRIPT NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOTRANSACTIONEFTINFOTRANS' and COLUMN_NAME = 'EXTERNALCARDRECEIPTS' and DATA_TYPE = 'TEXT')
begin
	alter table RBOTRANSACTIONEFTINFOTRANS alter column EXTERNALCARDRECEIPTS NVARCHAR(MAX)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'INVENTSERIAL' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'TEXT')
begin
	alter table INVENTSERIAL drop constraint DF__INVENTSER__DESCR__7C5BFA2A
	alter table INVENTSERIAL alter column DESCRIPTION NVARCHAR(MAX)
end

/* Changing NTEXT to NVARCHAR(MAX) */

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'REPLICATIONACTIONS' and COLUMN_NAME = 'Parameters' and DATA_TYPE = 'NTEXT')
begin
	alter table REPLICATIONACTIONS alter column Parameters NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISLANGUAGETEXT' and COLUMN_NAME = 'TEXT' and DATA_TYPE = 'NTEXT')
begin
	alter table POSISLANGUAGETEXT alter column TEXT NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'SIGNEDACTIONS' and COLUMN_NAME = 'Reason' and DATA_TYPE = 'NTEXT')
begin
	alter table SIGNEDACTIONS alter column Reason NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'INVENTTABLE' and COLUMN_NAME = 'NOTES' and DATA_TYPE = 'NTEXT')
begin
	alter table INVENTTABLE alter column NOTES NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOCOLORGROUPTRANS' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOCOLORGROUPTRANS alter column DESCRIPTION NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOSTYLEGROUPTRANS' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOSTYLEGROUPTRANS alter column DESCRIPTION NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'VENDTABLE' and COLUMN_NAME = 'MEMO' and DATA_TYPE = 'NTEXT')
begin
	alter table VENDTABLE alter column MEMO NVARCHAR(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOSIZEGROUPTRANS' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOSIZEGROUPTRANS alter column DESCRIPTION NVARCHAR(MAX)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOSTYLES' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOSTYLES drop constraint DF__RBOSTYLES__DESCR__10104F21
	alter table RBOSTYLES alter column DESCRIPTION NVARCHAR(MAX)
end

 if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOSIZES' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOSIZES drop constraint DF__RBOSIZES__DESCRI__090E4BD7
	alter table RBOSIZES alter column DESCRIPTION NVARCHAR(MAX)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'RBOCOLORS' and COLUMN_NAME = 'DESCRIPTION' and DATA_TYPE = 'NTEXT')
begin
	alter table RBOCOLORS drop constraint DF__RBOCOLORS__DESCR__4CD9663F
	alter table RBOCOLORS alter column DESCRIPTION NVARCHAR(MAX)
end

/* Changing IMAGE to VARBINARY(MAX) */
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTRANSACTIONTABLE' and COLUMN_NAME = 'TRANSACTIONDATA' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTRANSACTIONTABLE alter column TRANSACTIONDATA VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTRANSACTION' and COLUMN_NAME = 'TRANSACTIONDATA' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTRANSACTION alter column TRANSACTIONDATA VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_CUSTOMERLAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_CUSTOMERLAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_RECEIPTITEMSLAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_RECEIPTITEMSLAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_RECEIPTPAYMENTLAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_RECEIPTPAYMENTLAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_TOTALSLAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_TOTALSLAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_LAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_LAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISTILLLAYOUT' and COLUMN_NAME = 'IMG_CASHCHANGERLAYOUTXML' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISTILLLAYOUT alter column IMG_CASHCHANGERLAYOUTXML VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISSUSPENDEDTRANSACTIONS' and COLUMN_NAME = 'TRANSACTIONDATA' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISSUSPENDEDTRANSACTIONS alter column TRANSACTIONDATA VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISKEYBOARDBUTTONCONTROLB' and COLUMN_NAME = 'PICTURE' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISKEYBOARDBUTTONCONTROLB alter column PICTURE VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSISIMAGES' and COLUMN_NAME = 'PICTURE' and DATA_TYPE = 'IMAGE')
begin
	alter table POSISIMAGES alter column PICTURE VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'HOSPITALITYTYPE' and COLUMN_NAME = 'GRAPHICALLAYOUT' and DATA_TYPE = 'IMAGE')
begin
	alter table HOSPITALITYTYPE alter column GRAPHICALLAYOUT VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSMENULINE' and COLUMN_NAME = 'PICTURE' and DATA_TYPE = 'IMAGE')
begin
	alter table POSMENULINE alter column PICTURE VARBINARY(MAX)
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'DININGTABLELAYOUTSCREEN' and COLUMN_NAME = 'BACKGROUNDIMAGE' and DATA_TYPE = 'IMAGE')
begin
	alter table DININGTABLELAYOUTSCREEN alter column BACKGROUNDIMAGE VARBINARY(MAX)
end

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = 'POSHARDWAREPROFILE' and COLUMN_NAME = 'LOGOBITMAP' and DATA_TYPE = 'IMAGE')
begin
	alter table POSHARDWAREPROFILE drop constraint DF__POSHARDWA__LOGOB__2A6452AA
	alter table POSHARDWAREPROFILE alter column LOGOBITMAP VARBINARY(MAX)
end

/* Fixing incorrect DataAreaID field sizes*/

if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'STATIONSELECTION' and COLUMN_NAME = N'DATAAREAID' and CHARACTER_MAXIMUM_LENGTH <> 4 )
begin
	alter table STATIONSELECTION drop constraint PK_STATIONSELECTION
	alter table STATIONSELECTION alter column DATAAREAID NVARCHAR(4) not null
	ALTER TABLE STATIONSELECTION ADD  CONSTRAINT PK_STATIONSELECTION PRIMARY KEY CLUSTERED 
(
	TYPE ASC,
	CODE ASC,
	STATIONID ASC,
	SALESTYPE ASC,
	RESTAURANTID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'POSISDISCOUNTVOUCHERTABLE' and COLUMN_NAME = N'DATAAREAID' and CHARACTER_MAXIMUM_LENGTH <> 4 )
begin
	alter table POSISDISCOUNTVOUCHERTABLE alter column DATAAREAID NVARCHAR(4) not null
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'SIGNEDACTIONS' and COLUMN_NAME = N'DATAAREAID' and CHARACTER_MAXIMUM_LENGTH <> 4 )
begin
	alter table SIGNEDACTIONS drop constraint PK_SIGNEDACTIONS
	alter table SIGNEDACTIONS alter column DATAAREAID NVARCHAR(4) not null
	ALTER TABLE SIGNEDACTIONS ADD  CONSTRAINT PK_SIGNEDACTIONS PRIMARY KEY CLUSTERED 
(
	GUID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'RBOGIFTCARDTRANSACTIONS' and COLUMN_NAME = N'DATAAREAID' and CHARACTER_MAXIMUM_LENGTH <> 4 )
begin
	alter table RBOGIFTCARDTRANSACTIONS drop constraint PK_Table_1
	alter table RBOGIFTCARDTRANSACTIONS alter column DATAAREAID NVARCHAR(4) not null
	ALTER TABLE RBOGIFTCARDTRANSACTIONS ADD  CONSTRAINT PK_Table_1 PRIMARY KEY CLUSTERED 
(
	GIFTCARDID ASC,
	GIFTCARDLINEID ASC,
	DATAAREAID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
end
 
if exists (select * from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME = N'RBOTRANSACTIONEFTINFOTRANS' and COLUMN_NAME = N'DATAAREAID' and CHARACTER_MAXIMUM_LENGTH <> 4 )
begin
	alter table RBOTRANSACTIONEFTINFOTRANS alter column DATAAREAID NVARCHAR(4) not null
end


 