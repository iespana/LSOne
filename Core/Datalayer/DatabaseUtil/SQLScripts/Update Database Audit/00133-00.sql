/*
	Incident No.	: ONE-9698
	Responsible		: Ovidiu Caba
	Sprint			: Betelgeuse
	Date created	: 05.03.2019

	Description		: Increase column ITEMID to 30 characters
*/

USE LSPOSNET_Audit

/*
	In order to determine which columns should be increased, I used the following script:

	select 'SELECT TABLE_NAME = ''' + TABLE_NAME + ''', COLUMN_NAME = ''' + COLUMN_NAME + ''', IS_NULLABLE = ''' + IS_NULLABLE + ''' UNION ', *
	from INFORMATION_SCHEMA.COLUMNS 
	where	COLUMN_NAME like '%item%' and 
			DATA_TYPE='nvarchar' and 
			COLUMN_NAME not like '%itemgroup%' and 
			COLUMN_NAME not like '%vendoritem%' and
			COLUMN_NAME not like '%itemdepartment%' and
			COLUMN_NAME not like '%RECEIPTITEMSLAYOUTXML%' and
			COLUMN_NAME not like '%TAXITEM%' and
			COLUMN_NAME not like '%ITEMGRIDID%' and
			COLUMN_NAME not like '%ITEMPOSTINGGROUP%' and
			COLUMN_NAME not like '%ITEMTENDER%' and
			COLUMN_NAME not like '%ITEMIDCOMPANY%' and
			COLUMN_NAME not like '%ITEMFAMILY%' and
			COLUMN_NAME not like '%ITEMNUMSEQ%' and
			COLUMN_NAME not like '%MULTIBLEITEMSYMBOL%' and
			COLUMN_NAME not like '%ITEMBUYERGROUPID%' and
			TABLE_NAME not like '%VINVENTSUM%' and	-- this is a view, not a table
			CHARACTER_MAXIMUM_LENGTH < 30

	The reason we have 35 columns to change in the production database and only 22 columns in the audit database is because 
	the column ITEMNOTONFILE does not exist in the table POSFUNCTIONALITYPROFILELog and the other tables do not exist in the audit database.
*/

DECLARE @table_name nvarchar(max), @column_name nvarchar(max), @is_nullable nvarchar(10);

DECLARE columns_cursor CURSOR  
    FOR
		SELECT TABLE_NAME = 'INVENTORYTRANSFERREQUESTLINELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RETAILITEMLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'PRICEDISCTABLELog', COLUMN_NAME = 'ITEMRELATION', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTITEMBARCODELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'VENDORITEMSLog', COLUMN_NAME = 'RETAILITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'POSISTENDERRESTRICTIONSLog', COLUMN_NAME = 'ITEMORGROUPID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'PURCHASEORDERLINELog', COLUMN_NAME = 'RETAILITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTJOURNALTRANSLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NULL' UNION 
		SELECT TABLE_NAME = 'SPECIALGROUPITEMSLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTDIMCOMBINATIONLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBOINVENTITEMIMAGELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBOINVENTLINKEDITEMLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBOINVENTLINKEDITEMLog', COLUMN_NAME = 'LINKEDITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTTABLEMODULELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBODISCOUNTOFFERLINELog', COLUMN_NAME = 'ITEMRELATION', IS_NULLABLE = 'NULL' UNION 
		SELECT TABLE_NAME = 'RBOINVENTTABLELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBOINVENTTRANSLATIONSLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTTABLELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTTABLELog', COLUMN_NAME = 'ALTITEMID', IS_NULLABLE = 'NULL' UNION 
		SELECT TABLE_NAME = 'RBOSPECIALGROUPITEMSLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'UNITCONVERTLog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'INVENTORYTRANSFERORDERLINELog', COLUMN_NAME = 'ITEMID', IS_NULLABLE = 'NOT NULL' UNION 
		SELECT TABLE_NAME = 'RBOINFORMATIONSUBCODETABLELog', COLUMN_NAME = 'TRIGGERCODE', IS_NULLABLE = 'NULL' UNION	-- this is needed to be able to add subcode with trigger item with ID whose length is 30 characters
		SELECT TABLE_NAME = 'RBOINFOCODETABLESPECIFICLog', COLUMN_NAME = 'REFRELATION', IS_NULLABLE = 'NOT NULL'		-- this is needed to be able to add infocodes to an item

OPEN columns_cursor

FETCH NEXT FROM columns_cursor
INTO @table_name, @column_name, @is_nullable

WHILE @@FETCH_STATUS = 0  
BEGIN

	IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @table_name AND COLUMN_NAME = @column_name)
	BEGIN
		IF(COL_LENGTH(@table_name, @column_name) < 60) -- We want to update the column to be NVARCHAR(30) which has an equivalent length in bytes of 60
		BEGIN 
			EXEC('ALTER TABLE ' + @table_name + ' ALTER COLUMN ' + @column_name + ' NVARCHAR(30) ' + @is_nullable)
		END
	END

	FETCH NEXT FROM columns_cursor
	INTO @table_name, @column_name, @is_nullable

END

CLOSE columns_cursor;
DEALLOCATE columns_cursor;

GO