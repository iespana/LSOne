<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllUpgradesFinishedSuccessfully" xml:space="preserve">
    <value>Alle upgrades met succes uitgevoerd</value>
  </data>
  <data name="ConnectionIsClosed" xml:space="preserve">
    <value>Verbinding werd afgesloten</value>
  </data>
  <data name="ConnectionNotValid" xml:space="preserve">
    <value>De verbinding is niet geldig. De verwerking kan niet doorgaan</value>
  </data>
  <data name="ConnectionStringCannotBeCreated" xml:space="preserve">
    <value>Verbindingsstring kan niet worden aangemaakt - SQLServer en Database naamparameters moeten waarden hebben</value>
  </data>
  <data name="CreateDatabaseFailedMdfFileAlreadyExists" xml:space="preserve">
    <value>'DATABASE AANMAKEN' niet gelukt. Controleer of er geen mdf-bestand met dezelfde naam bestaat</value>
  </data>
  <data name="DataAreaIdIsNotValid" xml:space="preserve">
    <value>DataAreaId is niet geldig. Dit veld moet een waarde bevatten en mag uit niet meer dan 4 tekens bestaan</value>
  </data>
  <data name="DatabaseAlreadyExistsNewDatabaseNotCreated" xml:space="preserve">
    <value>Database bestaat al, nieuwe database niet aangemaakt</value>
  </data>
  <data name="DatabaseConnectionSet" xml:space="preserve">
    <value>Verbinding database ingesteld</value>
  </data>
  <data name="DatabaseCreated" xml:space="preserve">
    <value>Database #1 aangemaakt</value>
  </data>
  <data name="DatabaseDoesNotExist" xml:space="preserve">
    <value>Database bestaat niet</value>
  </data>
  <data name="DatabaseNeedsToBeUpgradedStartingUpgrade" xml:space="preserve">
    <value>Database moet worden geüpgraded - upgrade beginnen ...</value>
  </data>
  <data name="DatabaseUpdatesFinishedSuccessfully" xml:space="preserve">
    <value>Updates van database met succes voltooid</value>
  </data>
  <data name="DatabaseUtilGetTableError" xml:space="preserve">
    <value>DatabaseUtil.GetTable: #1 - SQL = #2</value>
  </data>
  <data name="DemoDataSuccessfullyLoaded" xml:space="preserve">
    <value>Demogegevens succesvol geladen</value>
  </data>
  <data name="ErrorAccessingRegistryKeys" xml:space="preserve">
    <value>Fout bij toegang registrysleutels</value>
  </data>
  <data name="ErrorClosingTheDatabaseConnection" xml:space="preserve">
    <value>Fout bij het afsluiten van de databaseverbinding</value>
  </data>
  <data name="ErrorExecutingQuery" xml:space="preserve">
    <value>Fout bij het uitvoeren query: #1</value>
  </data>
  <data name="ErrorGettingDatabaseInformation" xml:space="preserve">
    <value>Fout bij het ophalen van informatie uit de database</value>
  </data>
  <data name="ErrorInsertingDemoData" xml:space="preserve">
    <value>Fout bij het invoegen van de demogegevens: #1</value>
  </data>
  <data name="ErrorSettingMasterConnection" xml:space="preserve">
    <value>Fout bij het instellen van de hoofdverbinding</value>
  </data>
  <data name="ErrorWhenUpdatingDatabaseVersion" xml:space="preserve">
    <value>Fout bij het updaten van databaseversie #1</value>
  </data>
  <data name="ErrorWhenUpdatingDemoData" xml:space="preserve">
    <value>Fout bij het updaten van de demogegevens: #1</value>
  </data>
  <data name="ExecutingUpgrade" xml:space="preserve">
    <value>Upgrade uitvoeren </value>
  </data>
  <data name="FailedToSetTheDatabaseConnection" xml:space="preserve">
    <value>Niet gelukt om verbinding met database in te stellen</value>
  </data>
  <data name="LanguageIdsSuccessfullyCreated" xml:space="preserve">
    <value>Taal-ID's met succes aangemaakt</value>
  </data>
  <data name="LoadingDemoDataIntoTables" xml:space="preserve">
    <value>Gegevens in tabellen laden </value>
  </data>
  <data name="NetworkService" xml:space="preserve">
    <value>NT AUTHORITY\NETWORK SERVICE</value>
  </data>
  <data name="NoResourceNameProvided" xml:space="preserve">
    <value>Geen naam voor resource voorzien</value>
  </data>
  <data name="RunningAdminScript" xml:space="preserve">
    <value>Admin. script wordt uitgevoerd</value>
  </data>
  <data name="ScriptToAddStoredProceduresStarted" xml:space="preserve">
    <value>Script om opgeslagen procedures toe te voegen, opgestart</value>
  </data>
  <data name="ScriptToCreateAllLanguageIdsStarted" xml:space="preserve">
    <value>Script om alle taal-ids aan te maken, opgestart</value>
  </data>
  <data name="ScriptToCreateTablesStarted" xml:space="preserve">
    <value>Script om tabellen aan te maken, opgestart</value>
  </data>
  <data name="SenderDatabaseUtil" xml:space="preserve">
    <value>Database utilities</value>
  </data>
  <data name="SetupFilesDoNotExistInPathGiven" xml:space="preserve">
    <value>Instelbestanden bestaan niet in het opgegeven pad</value>
  </data>
  <data name="SQLInstallParametersHaveNotBeenSet" xml:space="preserve">
    <value>SQL installatieparameters werden niet ingesteld. SQL Express-server kan niet worden geïnstalleerd</value>
  </data>
  <data name="SQLInstallTypeNotImplemented" xml:space="preserve">
    <value>SQL installatietype niet geïmplementeerd</value>
  </data>
  <data name="SQLScriptFinishedSuccessfully" xml:space="preserve">
    <value>SQL script #1 met succes voltooid</value>
  </data>
  <data name="SQLServerInstanceDoesNotExist" xml:space="preserve">
    <value>SQL Server instantie bestaat niet</value>
  </data>
  <data name="StoredProcedureCreatedSuccessfully" xml:space="preserve">
    <value>Opgeslagen procedure #1 met succes aangemaakt</value>
  </data>
  <data name="TableCreatedSuccessfully" xml:space="preserve">
    <value>Tabel #1 met succes aangemaakt</value>
  </data>
  <data name="TableNameDone" xml:space="preserve">
    <value> - #1 -&gt; klaar</value>
  </data>
  <data name="UpdateScriptFinishedSuccessfully" xml:space="preserve">
    <value>Update script #1 met succes afgewerkt</value>
  </data>
  <data name="UpdatingDemoData" xml:space="preserve">
    <value>Demogegevens updaten </value>
  </data>
  <data name="UserScriptsStarted" xml:space="preserve">
    <value>Gebruikersscripts opgestart</value>
  </data>
  <data name="RecompilingObjects" xml:space="preserve">
    <value>Decompileren objecten</value>
  </data>
  <data name="ScriptToAddCloudData" xml:space="preserve">
    <value>Script om cloudgegevens toe te voegen is gestart</value>
  </data>
</root>