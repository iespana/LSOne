<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectionNotValid" xml:space="preserve">
    <value>Die Verbindung ist nicht gültig. Der Vorgang kann nicht fortgesetzt werden</value>
  </data>
  <data name="DataAreaIdIsNotValid" xml:space="preserve">
    <value>Datenbereichs-ID ist nicht gültig ist, sie muss es einen Wert haben und darf nicht mehr als 4 Zeichen lang sein</value>
  </data>
  <data name="DatabaseAlreadyExistsNewDatabaseNotCreated" xml:space="preserve">
    <value>Datenbank bereits vorhanden, neue Datenbank nicht erstellt</value>
  </data>
  <data name="DatabaseConnectionSet" xml:space="preserve">
    <value>Datenbankverbindung erstellen</value>
  </data>
  <data name="DatabaseNeedsToBeUpgradedStartingUpgrade" xml:space="preserve">
    <value>Datenbank muss aktualisiert werden - Starte Upgrade...</value>
  </data>
  <data name="DatabaseUpdatesFinishedSuccessfully" xml:space="preserve">
    <value>Datenbank-Updates erfolgreich abgeschlossen</value>
  </data>
  <data name="DatabaseUtilGetTableError" xml:space="preserve">
    <value>DatabaseUtil.GetTable: #1 - SQL = #2</value>
  </data>
  <data name="DemoDataSuccessfullyLoaded" xml:space="preserve">
    <value>Demo-Daten erfolgreich geladen</value>
  </data>
  <data name="ErrorAccessingRegistryKeys" xml:space="preserve">
    <value>Fehler beim Zugriff auf Registrierungsschlüssel</value>
  </data>
  <data name="ErrorClosingTheDatabaseConnection" xml:space="preserve">
    <value>Fehler beim Schließen der Datenbank-Verbindung</value>
  </data>
  <data name="ErrorSettingMasterConnection" xml:space="preserve">
    <value>Konnte die Master-Verbindung nicht erstellen</value>
  </data>
  <data name="ErrorWhenUpdatingDatabaseVersion" xml:space="preserve">
    <value>Fehler beim Aktualisieren von Datenbank-Version #1</value>
  </data>
  <data name="ErrorWhenUpdatingDemoData" xml:space="preserve">
    <value>Fehler beim Aktualisieren der Demo-Daten: #1</value>
  </data>
  <data name="FailedToSetTheDatabaseConnection" xml:space="preserve">
    <value>Konnte die Datenbankverbindung nicht erstellen</value>
  </data>
  <data name="LanguageIdsSuccessfullyCreated" xml:space="preserve">
    <value>Sprach-IDs erfolgreich erstellt</value>
  </data>
  <data name="NoResourceNameProvided" xml:space="preserve">
    <value>Keinen Ressourcename enthalten</value>
  </data>
  <data name="RunningAdminScript" xml:space="preserve">
    <value>Admin-Skript wird ausgeführt</value>
  </data>
  <data name="ScriptToAddStoredProceduresStarted" xml:space="preserve">
    <value>Skript, um gespeicherte Prozeduren hinzuzufügen, ist gestartet</value>
  </data>
  <data name="ScriptToCreateAllLanguageIdsStarted" xml:space="preserve">
    <value>Skript, um alle Sprach-IDs zu erstellen, ist gestartet
</value>
  </data>
  <data name="SenderDatabaseUtil" xml:space="preserve">
    <value>Datenbank-Dienstprogramme</value>
  </data>
  <data name="SetupFilesDoNotExistInPathGiven" xml:space="preserve">
    <value>Setup-Dateien nicht im angebenen Pfad vorhanden</value>
  </data>
  <data name="SQLInstallParametersHaveNotBeenSet" xml:space="preserve">
    <value>SQL Installationsparameter wurden nicht eingestellt. SQLExpress Server kann nicht installiert werden</value>
  </data>
  <data name="SQLServerInstanceDoesNotExist" xml:space="preserve">
    <value>SQL Server-Instanz existiert nicht</value>
  </data>
  <data name="StoredProcedureCreatedSuccessfully" xml:space="preserve">
    <value>Gespeicherte Prozedur #1 erfolgreich erstellt</value>
  </data>
  <data name="UpdatingDemoData" xml:space="preserve">
    <value>Aktualisiere Demo-Daten</value>
  </data>
  <data name="UserScriptsStarted" xml:space="preserve">
    <value>Benutzer-Skripte sind gestartet</value>
  </data>
  <data name="AllUpgradesFinishedSuccessfully" xml:space="preserve">
    <value>Alle Upgrades erfolgreich abgeschlossen</value>
  </data>
  <data name="ConnectionIsClosed" xml:space="preserve">
    <value>Verbindung wurde geschlossen</value>
  </data>
  <data name="ConnectionStringCannotBeCreated" xml:space="preserve">
    <value>Verbindungszeichenfolge kann nicht erstellt werden - SQLServer und Datenbankname-Parameter müssen Werte haben</value>
  </data>
  <data name="CreateDatabaseFailedMdfFileAlreadyExists" xml:space="preserve">
    <value>"DATENBANK ERSTELLEN" fehlgeschlagen, stellen Sie sicher, dass eine MDF-Datei mit dem gleichen Namen nicht bereits vorhanden ist</value>
  </data>
  <data name="DatabaseCreated" xml:space="preserve">
    <value>Datenbank #1 erstellt</value>
  </data>
  <data name="DatabaseDoesNotExist" xml:space="preserve">
    <value>Datenbank nicht vorhanden</value>
  </data>
  <data name="ErrorExecutingQuery" xml:space="preserve">
    <value>Fehler beim Ausführen der Abfrage: #1</value>
  </data>
  <data name="ErrorGettingDatabaseInformation" xml:space="preserve">
    <value>Fehler beim Abrufen der Datenbankinformationen</value>
  </data>
  <data name="ErrorInsertingDemoData" xml:space="preserve">
    <value>Fehler beim Einfügen der Demo-Daten: #1</value>
  </data>
  <data name="ExecutingUpgrade" xml:space="preserve">
    <value>Führe Upgrade aus</value>
  </data>
  <data name="LoadingDemoDataIntoTables" xml:space="preserve">
    <value>Lädt Demo-Daten in Tabellen</value>
  </data>
  <data name="ScriptToCreateTablesStarted" xml:space="preserve">
    <value>Skript zum Erstellen von Tabellen ist gestartet</value>
  </data>
  <data name="SQLInstallTypeNotImplemented" xml:space="preserve">
    <value>SQL Installationstyp nicht implementiert</value>
  </data>
  <data name="SQLScriptFinishedSuccessfully" xml:space="preserve">
    <value>SQL-Skript #1 erfolgreich abgeschlossen</value>
  </data>
  <data name="TableCreatedSuccessfully" xml:space="preserve">
    <value>Tabelle #1 erfolgreich erstellt</value>
  </data>
  <data name="TableNameDone" xml:space="preserve">
    <value> - #1 -&gt; fertig</value>
  </data>
  <data name="UpdateScriptFinishedSuccessfully" xml:space="preserve">
    <value>Update-Skript #1 erfolgreich abgeschlossen</value>
  </data>
  <data name="NetworkService" xml:space="preserve">
    <value>NT-AUTORITÄT\ NETZWERK-SERVICE</value>
  </data>
  <data name="RecompilingObjects" xml:space="preserve">
    <value>Objekte werden neu zusammengestellt</value>
  </data>
  <data name="ScriptToAddCloudData" xml:space="preserve">
    <value>Skript zum Hinzufügen der Cloud-Daten gestartet</value>
  </data>
</root>