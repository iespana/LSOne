<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="AmountDue" xml:space="preserve">
    <value>Verschuldigde bedrag: #1</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>Credit Kaart</value>
  </data>
  <data name="CardNumberLengthNotValid" xml:space="preserve">
    <value>Kaart nummer lengte is niet geldig.</value>
  </data>
  <data name="CardTypeCannotManuallyEnter" xml:space="preserve">
    <value>Het nummer van de kaart voor dit kaarttype kan niet handmatig worden ingevoerd</value>
  </data>
  <data name="CardUnidentified" xml:space="preserve">
    <value>Kaarttype niet herkend door de EFT-makelaar</value>
  </data>
  <data name="ClearCard" xml:space="preserve">
    <value>Clear kaart</value>
  </data>
  <data name="ConnectingToTerminal" xml:space="preserve">
    <value>Verbinden...</value>
  </data>
  <data name="CVVNotValid" xml:space="preserve">
    <value>CVV code is niet geldig</value>
  </data>
  <data name="EFTMappingFallbackNotDefined" xml:space="preserve">
    <value>Een EFT-toewijzing voor de naam van de regeling ' *' niet is gedefinieerd. Om de verwerking uit te voeren, moet een dergelijke toewijzing bestaan zodat accepteren kaarten die nog niet gepaard gegaan met een betalingstype.</value>
  </data>
  <data name="EFTMappingRequired" xml:space="preserve">
    <value>Een toewijzingsregel met EFT is vereist</value>
  </data>
  <data name="EnterAmount" xml:space="preserve">
    <value>Voer bedrag in</value>
  </data>
  <data name="EnterCardNumber" xml:space="preserve">
    <value>Voer kaartnummer in</value>
  </data>
  <data name="EnterExpireDate" xml:space="preserve">
    <value>Voer vervallen datum</value>
  </data>
  <data name="ExpiryDateNotValid" xml:space="preserve">
    <value>Vervaldatum is niet geldig.</value>
  </data>
  <data name="InvalidCardLength" xml:space="preserve">
    <value>Kaart nummer lengte is niet geldig.</value>
  </data>
  <data name="ManuallyEnteredNotAllowed" xml:space="preserve">
    <value>Het nummer van de kaart voor dit kaarttype kan niet handmatig worden ingevoerd</value>
  </data>
  <data name="NegativePaymentsNotBelowBalance" xml:space="preserve">
    <value>Negatieve betalingen gaan niet onder het saldobedrag</value>
  </data>
  <data name="NoItemToPay" xml:space="preserve">
    <value>Geen item te betalen</value>
  </data>
  <data name="OnlyNegativeAmountsAllowed" xml:space="preserve">
    <value>Alleen negatieve bedragen zijn toegestaan</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Betaal</value>
  </data>
  <data name="PleaseEnterAnAmount" xml:space="preserve">
    <value>Voer een bedrag in</value>
  </data>
  <data name="PleaseEnterCardNumber" xml:space="preserve">
    <value>Please enter your card number</value>
  </data>
  <data name="PleaseSelectCardTypeFirst" xml:space="preserve">
    <value>Selecteer eerst kaarttype</value>
  </data>
  <data name="TakeTheCard" xml:space="preserve">
    <value>Betaling is gesloten. Neem de kaart</value>
  </data>
  <data name="TenderInformationNotFound" xml:space="preserve">
    <value>Inschrijving #1 is niet gevonden. Kaart betaling bewerking kan niet worden voortgezet.</value>
  </data>
  <data name="TenderNotProperlyConfigured" xml:space="preserve">
    <value>Inschrijving #1 is niet juist geconfigureerd. Kaart betaling bewerking kan niet worden voortgezet.</value>
  </data>
  <data name="WaitingForCardAndPin" xml:space="preserve">
    <value>Wachten op kaart en pin nummer</value>
  </data>
</root>