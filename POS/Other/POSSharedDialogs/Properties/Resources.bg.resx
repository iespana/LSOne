<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Отказ</value>
  </data>
  <data name="CancelSearch" xml:space="preserve">
    <value>Отказ</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Сума</value>
  </data>
  <data name="AmountDue" xml:space="preserve">
    <value>Дължима сума: #1</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Назад:</value>
  </data>
  <data name="BarCode" xml:space="preserve">
    <value>Баркод</value>
  </data>
  <data name="BarCodeOrQuantity" xml:space="preserve">
    <value>Баркод или количество:</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Изчисти</value>
  </data>
  <data name="Currencies" xml:space="preserve">
    <value>Валути</value>
  </data>
  <data name="CustomerAccountDeposit" xml:space="preserve">
    <value>Депозит по клиентска сметка</value>
  </data>
  <data name="CustomerBlocked" xml:space="preserve">
    <value>Този клиент е блокиран. Не се разрешават продажби или транзакции.</value>
  </data>
  <data name="CustomerIsCashCustomer" xml:space="preserve">
    <value>Този профил не може да бъде таксуван. Този клиент е клиент в брой.</value>
  </data>
  <data name="CustomerLimitedToInvoice" xml:space="preserve">
    <value>Този клиент е има ограничения за фактуриране. Този профил не може да бъде таксуван.</value>
  </data>
  <data name="DeclareFloatAmount" xml:space="preserve">
    <value>Декларирайте плаваща сума</value>
  </data>
  <data name="DeclareStartAmount" xml:space="preserve">
    <value>Деклариране начална сума</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Надолу</value>
  </data>
  <data name="EnterAmount" xml:space="preserve">
    <value>Въведете Сума</value>
  </data>
  <data name="EnterExpireDate" xml:space="preserve">
    <value>Въведете дата на изтичане</value>
  </data>
  <data name="EnterNumber" xml:space="preserve">
    <value>Въведете номер</value>
  </data>
  <data name="EnterQuantity" xml:space="preserve">
    <value>Въведете количество</value>
  </data>
  <data name="ItemBarCode" xml:space="preserve">
    <value>Артикул баркод:</value>
  </data>
  <data name="MaxQtyReached" xml:space="preserve">
    <value>Достигнато е максималното количество</value>
  </data>
  <data name="NegativePaymentsNotBelowBalance" xml:space="preserve">
    <value>Отрицателните плащания не могат да надхвърлят балансовата сума</value>
  </data>
  <data name="OnlyNegativeAmountsAllowed" xml:space="preserve">
    <value>Допускат се само отрицателни суми</value>
  </data>
  <data name="PageDown" xml:space="preserve">
    <value>Страница долу</value>
  </data>
  <data name="PageUp" xml:space="preserve">
    <value>Страница горе</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Плащане</value>
  </data>
  <data name="PleaseEnterAmountToPay" xml:space="preserve">
    <value>Моля въведете сума</value>
  </data>
  <data name="PleaseEnterAnAmount" xml:space="preserve">
    <value>Моля въведете сума</value>
  </data>
  <data name="PleaseEnterAValue" xml:space="preserve">
    <value>Моля въведете стойност за интервал между бутоните</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>В процес на изпълнение</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Количество:</value>
  </data>
  <data name="ReadingQR" xml:space="preserve">
    <value>Четене на QR код</value>
  </data>
  <data name="RetryQuestion" xml:space="preserve">
    <value>Искате ли да опитате отново?</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Търсене</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Избиране</value>
  </data>
  <data name="TenderRemoval" xml:space="preserve">
    <value>Премахване плащане</value>
  </data>
  <data name="TenderRemovalDescription" xml:space="preserve">
    <value>Прамахнато успешно!</value>
  </data>
  <data name="TenderRemovalLabel" xml:space="preserve">
    <value>Премахната сума</value>
  </data>
  <data name="UnableToReadCardStripe" xml:space="preserve">
    <value>Не може да се прочете лентата на картата, моля опитайте отново</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Нагоре</value>
  </data>
</root>